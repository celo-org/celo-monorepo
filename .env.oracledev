ORACLE_DOCKER_IMAGE_REPOSITORY="celotestnet.azurecr.io/testnet/oracle"
ORACLE_DOCKER_IMAGE_TAG="c7215fcbeccc0c61b306fbd0503a67bd0cf509de"

ORACLE_UNUSED_ORACLE_ADDRESSES=

# each context should have its own environment variables, generally of the form
# <context in all caps and underscores>_*
CONTEXTS=azure-eastus,aws-test,gcp-test,gcp-test-asia

FORNO_FULL_NODE_CONTEXTS=gcp-test,gcp-test-asia
FORNO_DOMAINS=oracledev-forno.celo-networks-dev.org.
# all clusters must be in this VPC
FORNO_VPC_NETWORK_NAME=default

AZURE_EASTUS_AZURE_SUBSCRIPTION_ID=97e2b592-255b-4f92-bce0-127257163c36
AZURE_EASTUS_AZURE_TENANT_ID=7cb7628a-e37c-4afb-8332-2029e418980e
AZURE_EASTUS_AZURE_KUBERNETES_RESOURCE_GROUP=testnet-oracle-eastus
AZURE_EASTUS_KUBERNETES_CLUSTER_NAME=testnet-oracle-eastus
# Format should be a comma-separated sequence of:
# <address>:<key vault name>:<resource group (optional)>
AZURE_EASTUS_ORACLE_ADDRESS_AZURE_KEY_VAULTS=0x21860ca3a0a6f7e450b8f24bd00eac7ba766b85e:testnet-oracle-eastus,0xfd3738e5e0a020614a9e5253078dda491e77031c:testnet-oracle-eastus
# AZURE_EASTUS_ORACLE_ADDRESSES_FROM_MNEMONIC_COUNT=
AZURE_EASTUS_FULL_NODES_COUNT=2
AZURE_EASTUS_FULL_NODES_DISK_SIZE=10

AWS_TEST_AWS_KUBERNETES_CLUSTER_REGION=us-west-2
AWS_TEST_AWS_KUBERNETES_RESOURCE_GROUP=adorable-monster-1597251246
AWS_TEST_KUBERNETES_CLUSTER_NAME=adorable-monster-1597251246
AWS_TEST_FULL_NODES_COUNT=2
AWS_TEST_FULL_NODES_DISK_SIZE=10

GCP_TEST_GCP_PROJECT_NAME=celo-testnet
GCP_TEST_GCP_ZONE=us-west4-a
GCP_TEST_KUBERNETES_CLUSTER_NAME=federated-dev-us-west4-a
GCP_TEST_FULL_NODES_COUNT=1
GCP_TEST_FULL_NODES_DISK_SIZE=10

GCP_TEST_ASIA_GCP_PROJECT_NAME=celo-testnet
GCP_TEST_ASIA_GCP_ZONE=asia-northeast2-a
GCP_TEST_ASIA_KUBERNETES_CLUSTER_NAME=federated-dev-asia-northeast2-a
GCP_TEST_ASIA_FULL_NODES_COUNT=1
GCP_TEST_ASIA_FULL_NODES_DISK_SIZE=10

# ---- General ----

ENV_TYPE="development"
CLUSTER_DOMAIN_NAME="celo-networks-dev"
TESTNET_PROJECT_NAME="celo-testnet"
CLUSTER_DOMAIN_NAME="celo-networks-dev"

# ---- Kubernetes ----

KUBERNETES_CLUSTER_NAME="celo-networks-dev"
KUBERNETES_CLUSTER_ZONE="us-west1-a"
CLUSTER_CREATION_FLAGS="--enable-autoscaling --min-nodes 3 --max-nodes 8 --machine-type=n1-standard-4"

# ---- VM ----

VM_BASED=false

# ---- Blockscout ----

BLOCKSCOUT_DOCKER_IMAGE_REPOSITORY="gcr.io/celo-testnet/blockscout"
BLOCKSCOUT_DOCKER_IMAGE_TAG="ad86714d629c01272e0651dec1fb6a968c3cec71"
BLOCKSCOUT_WEB_REPLICAS=3
BLOCKSCOUT_DB_SUFFIX="-2"

# ---- Geth ----

GETH_NODE_DOCKER_IMAGE_REPOSITORY="us.gcr.io/celo-testnet/geth"
# When upgrading change this to latest commit hash from the master of the geth repo
# `geth $ git show | head -n 1`
GETH_NODE_DOCKER_IMAGE_TAG="8a44c2cd92200bdffce595c7558e84a39ea2bc15"

GETH_VERBOSITY=2

GETH_BOOTNODE_DOCKER_IMAGE_REPOSITORY="us.gcr.io/celo-testnet/geth-all"
# When upgrading change this to latest commit hash from the master of the geth repo
# `geth $ git show | head -n 1`
GETH_BOOTNODE_DOCKER_IMAGE_TAG="8a44c2cd92200bdffce595c7558e84a39ea2bc15"

GETH_EXPORTER_DOCKER_IMAGE_REPOSITORY="gcr.io/celo-testnet-production/geth-exporter"
GETH_EXPORTER_DOCKER_IMAGE_TAG="ed7d21bd50592709173368cd697ef73c1774a261"

# ---- Celotool ----

CELOTOOL_DOCKER_IMAGE_REPOSITORY="gcr.io/celo-testnet/celo-monorepo"
CELOTOOL_DOCKER_IMAGE_TAG="celotool-dcad01808c05f77ea71b911ba331caab0fd739d3"

# ---- Transaction Metrics Exporter ----

TRANSACTION_METRICS_EXPORTER_DOCKER_IMAGE_REPOSITORY="gcr.io/celo-testnet/celo-monorepo"
TRANSACTION_METRICS_EXPORTER_DOCKER_IMAGE_TAG="transaction-metrics-exporter-8e69cf86010b62e283d5f9285f181fca5483733e"

# ---- Genesis Vars ----
NETWORK_ID=1101
CONSENSUS_TYPE="istanbul"
PREDEPLOYED_CONTRACTS="REGISTRY"
BLOCK_TIME=5
EPOCH=720

# ---- Network Vars ----
VALIDATORS=2
PROXIED_VALIDATORS=0
TX_NODES=1
# Nodes whose RPC ports are only internally exposed
PRIVATE_TX_NODES=1
STATIC_IPS_FOR_GETH_NODES=false
PING_IP_FROM_PACKET=true
IN_MEMORY_DISCOVERY_TABLE=false
ISTANBUL_REQUEST_TIMEOUT_MS=3000
NODE_DISK_SIZE_GB=10
ADMIN_RPC_ENABLED=false
LOAD_TEST_CLIENTS=100
# every 36 seconds, so that 100 transactions are sent by a client every hour
LOAD_TEST_TX_DELAY_MS=36000

GETH_NODE_CPU_REQUEST=400m
GETH_NODE_MEMORY_REQUEST=1.75G

VERIFICATION_POOL_URL="https://us-central1-celo-testnet.cloudfunctions.net/handleVerificationRequesttrevor1/v0.1/sms/"
VERIFICATION_REWARDS_URL="https://us-central1-celo-testnet.cloudfunctions.net/handleVerificationRequesttrevor1/v0.1/rewards/"

STACKDRIVER_MONITORING_DASHBOARD="https://app.google.stackdriver.com/dashboards/17701013576385040071?project=celo-testnet"
STACKDRIVER_NOTIFICATION_CHANNEL="12047595356119796119"
MOBILE_WALLET_PLAYSTORE_LINK="https://play.google.com/apps/internaltest/4700990475000634666"

NOTIFICATION_SERVICE_FIREBASE_DB="https://console.firebase.google.com/u/0/project/celo-org-mobile/database/celo-org-mobile-int/data"

PROMTOSD_SCRAPE_INTERVAL="5m"
PROMTOSD_EXPORT_INTERVAL="5m"

AUCTION_CRON_SPEC="*/5 * * * *"

SMS_RETRIEVER_HASH_CODE=l5k6LvdPDXS
# empty string is false for helm
GETH_NODES_BACKUP_CRONJOB_ENABLED=
CONTRACT_CRONJOBS_ENABLED=

# Schedule for an oracle deployed via celotool, expressed in crontab syntax
# This schedule is "every 5th minute"
MOCK_ORACLE_CRON_SCHEDULE="*/5 * * * *"

MOCK_ORACLE_DOCKER_IMAGE_REPOSITORY="gcr.io/celo-testnet/oracle"
MOCK_ORACLE_DOCKER_IMAGE_TAG="baklava"

# The number of oracles to add during contract migrations.
# Their keys/addresses are generated using the mnemonic
ORACLES=10

CELOCLI_STANDALONE_IMAGE_REPOSITORY="gcr.io/celo-testnet/celocli-standalone"
CELOCLI_STANDALONE_IMAGE_TAG="0.0.30-beta2"
