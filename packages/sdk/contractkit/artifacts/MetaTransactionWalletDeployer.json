{
  "contractName": "MetaTransactionWalletDeployer",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "WalletDeployed",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "initCallData",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"WalletDeployed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"deploy(address,address,bytes)\":{\"params\":{\"implementation\":\"The address of the implementation which the proxy will point to\",\"initCallData\":\"calldata pointing to a method on implementation used to initialize\",\"owner\":\"The external account which will act as signer and owner of the proxy\"}},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"}}},\"userdoc\":{\"methods\":{\"deploy(address,address,bytes)\":{\"notice\":\"Used to deploy a MetaTransactionWalletProxy, set the implementation, initialize, transfer ownership and emit an event.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.     \"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/MetaTransactionWalletDeployer.sol\":\"MetaTransactionWalletDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"content\":\"pragma solidity ^0.5.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following \\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` into `address payable`. Note that this is\\n     * simply a type cast: the actual underlying value is not changed.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function toPayable(address account) internal pure returns (address payable) {\\n        return address(uint160(account));\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-call-value\\n        (bool success, ) = recipient.call.value(amount)(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\"},\"project:/contracts/common/MetaTransactionWalletDeployer.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"./interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"./interfaces/IMetaTransactionWalletDeployer.sol\\\";\\nimport \\\"./proxies/MetaTransactionWalletProxy.sol\\\";\\n\\ncontract MetaTransactionWalletDeployer is IMetaTransactionWalletDeployer, ICeloVersionedContract {\\n  event WalletDeployed(address indexed owner, address indexed wallet, address implementation);\\n\\n  /**\\n     * @notice Returns the storage, major, minor, and patch version of the contract.     \\n     * @return Storage version of the contract.\\n     * @return Major version of the contract.\\n     * @return Minor version of the contract.\\n     * @return Patch version of the contract.\\n     */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 0, 3);\\n  }\\n\\n  /**\\n     * @notice Used to deploy a MetaTransactionWalletProxy, set the implementation,\\n     * initialize, transfer ownership and emit an event.\\n     * @param owner The external account which will act as signer and owner of the proxy\\n     * @param implementation The address of the implementation which the proxy will point to\\n     * @param initCallData calldata pointing to a method on implementation used to initialize\\n     */\\n  function deploy(address owner, address implementation, bytes calldata initCallData) external {\\n    MetaTransactionWalletProxy proxy = new MetaTransactionWalletProxy();\\n    proxy._setAndInitializeImplementation(implementation, initCallData);\\n    proxy._transferOwnership(owner);\\n\\n    emit WalletDeployed(owner, address(proxy), implementation);\\n  }\\n}\\n\",\"keccak256\":\"0xc19a498789d5d830812aa16e645c54414c3b2e3ca0a44bcebd8d0cb660c80296\"},\"project:/contracts/common/Proxy.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n/* solhint-disable no-inline-assembly, no-complex-fallback, avoid-low-level-calls */\\n\\nimport \\\"openzeppelin-solidity/contracts/utils/Address.sol\\\";\\n\\n/**\\n * @title A Proxy utilizing the Unstructured Storage pattern.\\n */\\ncontract Proxy {\\n  // Used to store the address of the owner.\\n  bytes32 private constant OWNER_POSITION = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1);\\n  // Used to store the address of the implementation contract.\\n  bytes32 private constant IMPLEMENTATION_POSITION = bytes32(\\n    uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1\\n  );\\n\\n  event OwnerSet(address indexed owner);\\n  event ImplementationSet(address indexed implementation);\\n\\n  constructor() public {\\n    _setOwner(msg.sender);\\n  }\\n\\n  /**\\n   * @notice Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(msg.sender == _getOwner(), \\\"sender was not owner\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Delegates calls to the implementation contract.\\n   */\\n  function() external payable {\\n    bytes32 implementationPosition = IMPLEMENTATION_POSITION;\\n\\n    address implementationAddress;\\n\\n    // Load the address of the implementation contract from an explicit storage slot.\\n    assembly {\\n      implementationAddress := sload(implementationPosition)\\n    }\\n\\n    // Avoid checking if address is a contract or executing delegated call when\\n    // implementation address is 0x0\\n    require(implementationAddress != address(0), \\\"No Implementation set\\\");\\n    require(Address.isContract(implementationAddress), \\\"Invalid contract address\\\");\\n\\n    assembly {\\n      // Extract the position of the transaction data (i.e. function ID and arguments).\\n      let newCallDataPosition := mload(0x40)\\n      mstore(0x40, add(newCallDataPosition, calldatasize))\\n      calldatacopy(newCallDataPosition, 0, calldatasize)\\n\\n      // Call the smart contract at `implementationAddress` in the context of the proxy contract,\\n      // with the same msg.sender and value.\\n      let delegatecallSuccess := delegatecall(\\n        gas,\\n        implementationAddress,\\n        newCallDataPosition,\\n        calldatasize,\\n        0,\\n        0\\n      )\\n\\n      // Copy the return value of the call so it can be returned.\\n      let returnDataSize := returndatasize\\n      let returnDataPosition := mload(0x40)\\n      mstore(0x40, add(returnDataPosition, returnDataSize))\\n      returndatacopy(returnDataPosition, 0, returnDataSize)\\n\\n      // Revert or return depending on whether or not the call was successful.\\n      switch delegatecallSuccess\\n        case 0 {\\n          revert(returnDataPosition, returnDataSize)\\n        }\\n        default {\\n          return(returnDataPosition, returnDataSize)\\n        }\\n    }\\n  }\\n\\n  /**\\n   * @notice Transfers ownership of Proxy to a new owner.\\n   * @param newOwner Address of the new owner account.\\n   */\\n  function _transferOwnership(address newOwner) external onlyOwner {\\n    _setOwner(newOwner);\\n  }\\n\\n  /**\\n   * @notice Sets the address of the implementation contract and calls into it.\\n   * @param implementation Address of the new target contract.\\n   * @param callbackData The abi-encoded function call to perform in the implementation\\n   * contract.\\n   * @dev Throws if the initialization callback fails.\\n   * @dev If the target contract does not need initialization, use\\n   * setImplementation instead.\\n   */\\n  function _setAndInitializeImplementation(address implementation, bytes calldata callbackData)\\n    external\\n    payable\\n    onlyOwner\\n  {\\n    _setImplementation(implementation);\\n    bool success;\\n    bytes memory returnValue;\\n    (success, returnValue) = implementation.delegatecall(callbackData);\\n    require(success, \\\"initialization callback failed\\\");\\n  }\\n\\n  /**\\n   * @notice Returns the implementation address.\\n   */\\n  function _getImplementation() external view returns (address implementation) {\\n    bytes32 implementationPosition = IMPLEMENTATION_POSITION;\\n    // Load the address of the implementation contract from an explicit storage slot.\\n    assembly {\\n      implementation := sload(implementationPosition)\\n    }\\n  }\\n\\n  /**\\n   * @notice Sets the address of the implementation contract.\\n   * @param implementation Address of the new target contract.\\n   * @dev If the target contract needs to be initialized, call\\n   * setAndInitializeImplementation instead.\\n   */\\n  function _setImplementation(address implementation) public onlyOwner {\\n    bytes32 implementationPosition = IMPLEMENTATION_POSITION;\\n\\n    require(Address.isContract(implementation), \\\"Invalid contract address\\\");\\n\\n    // Store the address of the implementation contract in an explicit storage slot.\\n    assembly {\\n      sstore(implementationPosition, implementation)\\n    }\\n\\n    emit ImplementationSet(implementation);\\n  }\\n\\n  /**\\n   * @notice Returns the Proxy owner's address.\\n   */\\n  function _getOwner() public view returns (address owner) {\\n    bytes32 position = OWNER_POSITION;\\n    // Load the address of the contract owner from an explicit storage slot.\\n    assembly {\\n      owner := sload(position)\\n    }\\n  }\\n\\n  function _setOwner(address newOwner) internal {\\n    require(newOwner != address(0), \\\"owner cannot be 0\\\");\\n    bytes32 position = OWNER_POSITION;\\n    // Store the address of the contract owner in an explicit storage slot.\\n    assembly {\\n      sstore(position, newOwner)\\n    }\\n    emit OwnerSet(newOwner);\\n  }\\n}\\n\",\"keccak256\":\"0x650f2a079da45a71970749c9039dece5986835225035b29eca4df1c1dab0d6ac\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n    * @return Storage version of the contract.\\n    * @return Major version of the contract.\\n    * @return Minor version of the contract.\\n    * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x27f0b14472db998eb8e4b529bbfd6a5879cbd842f8db8aa6c06ed7d2e0b17ac1\"},\"project:/contracts/common/interfaces/IMetaTransactionWalletDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IMetaTransactionWalletDeployer {\\n  function deploy(address, address, bytes calldata) external;\\n}\\n\",\"keccak256\":\"0xf36e8a8b1a2a4e8414e623cbdfff8c747ddfa264151aa4f592ce9a1b48deed9d\"},\"project:/contracts/common/proxies/MetaTransactionWalletProxy.sol\":{\"content\":\"pragma solidity ^0.5.3;\\n\\nimport \\\"../Proxy.sol\\\";\\n\\n/* solhint-disable-next-line no-empty-blocks */\\ncontract MetaTransactionWalletProxy is Proxy {}\\n\",\"keccak256\":\"0xa1766fbbb99f3f1a94d39043ad4ee0e71f2047ed3240a2b00ce7e1cbf2169e50\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f30806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632db5b86f1461003b57806354255be0146100f4575b600080fd5b6100f26004803603606081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100ae57600080fd5b8201836020820111156100c057600080fd5b803590602001918460018302840111640100000000831117156100e257600080fd5b9091929391929390505050610127565b005b6100fc61034e565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b600060405161013590610375565b604051809103906000f080158015610151573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff166303386ba38585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663d29d44ee866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561029e57600080fd5b505af11580156102b2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f59f1a52a03cbb11153119ab5682a8097ec48554e9ce2141612d3615081c4f28886604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35050505050565b60008060008060018060006003839350829250819150809050935093509350935090919293565b610b79806103838339019056fe60806040526100133361001860201b60201c565b610148565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206265203000000000000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b90508181558173ffffffffffffffffffffffffffffffffffffffff167f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe260405160405180910390a25050565b610a22806101576000396000f3fe60806040526004361061004a5760003560e01c806303386ba3146101e757806342404e0714610280578063bb913f41146102d7578063d29d44ee14610328578063f7e6af8014610379575b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050600081549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f20496d706c656d656e746174696f6e20736574000000000000000000000081525060200191505060405180910390fd5b61013f816103d0565b6101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b60405136810160405236600082376000803683855af43d604051818101604052816000823e82600081146101e3578282f35b8282fd5b61027e600480360360408110156101fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023a57600080fd5b82018360208201111561024c57600080fd5b8035906020019184600183028401116401000000008311171561026e57600080fd5b909192939192939050505061041b565b005b34801561028c57600080fd5b506102956105c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610326600480360360208110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060d565b005b34801561033457600080fd5b506103776004803603602081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561038557600080fd5b5061038e610871565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561041257506000801b8214155b92505050919050565b610423610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b6104cc8361060d565b600060608473ffffffffffffffffffffffffffffffffffffffff168484604051808383808284378083019250505092505050600060405180830381855af49150503d8060008114610539576040519150601f19603f3d011682016040523d82523d6000602084013e61053e565b606091505b508092508193505050816105ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e697469616c697a6174696f6e2063616c6c6261636b206661696c6564000081525060200191505060405180910390fd5b5050505050565b600080600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050805491505090565b610615610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050610701826103d0565b610773576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b8181558173ffffffffffffffffffffffffffffffffffffffff167fab64f92ab780ecbf4f3866f57cee465ff36c89450dcce20237ca7a8d81fb7d1360405160405180910390a25050565b6107c5610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b61086e816108bd565b50565b600080600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b9050805491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206265203000000000000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b90508181558173ffffffffffffffffffffffffffffffffffffffff167f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe260405160405180910390a2505056fea265627a7a7231582045533c82f72269f659b782d65f9df44acb028dbd1cac773ca302071204faa33364736f6c634300050d0032a265627a7a723158205c32c21bd401ccdda130a41c2f39866d0d923078ec9c08d3b6c493e609edcc4364736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632db5b86f1461003b57806354255be0146100f4575b600080fd5b6100f26004803603606081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156100ae57600080fd5b8201836020820111156100c057600080fd5b803590602001918460018302840111640100000000831117156100e257600080fd5b9091929391929390505050610127565b005b6100fc61034e565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b600060405161013590610375565b604051809103906000f080158015610151573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff166303386ba38585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663d29d44ee866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561029e57600080fd5b505af11580156102b2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f59f1a52a03cbb11153119ab5682a8097ec48554e9ce2141612d3615081c4f28886604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35050505050565b60008060008060018060006003839350829250819150809050935093509350935090919293565b610b79806103838339019056fe60806040526100133361001860201b60201c565b610148565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206265203000000000000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b90508181558173ffffffffffffffffffffffffffffffffffffffff167f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe260405160405180910390a25050565b610a22806101576000396000f3fe60806040526004361061004a5760003560e01c806303386ba3146101e757806342404e0714610280578063bb913f41146102d7578063d29d44ee14610328578063f7e6af8014610379575b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050600081549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f20496d706c656d656e746174696f6e20736574000000000000000000000081525060200191505060405180910390fd5b61013f816103d0565b6101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b60405136810160405236600082376000803683855af43d604051818101604052816000823e82600081146101e3578282f35b8282fd5b61027e600480360360408110156101fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023a57600080fd5b82018360208201111561024c57600080fd5b8035906020019184600183028401116401000000008311171561026e57600080fd5b909192939192939050505061041b565b005b34801561028c57600080fd5b506102956105c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b50610326600480360360208110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060d565b005b34801561033457600080fd5b506103776004803603602081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561038557600080fd5b5061038e610871565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561041257506000801b8214155b92505050919050565b610423610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b6104cc8361060d565b600060608473ffffffffffffffffffffffffffffffffffffffff168484604051808383808284378083019250505092505050600060405180830381855af49150503d8060008114610539576040519150601f19603f3d011682016040523d82523d6000602084013e61053e565b606091505b508092508193505050816105ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e697469616c697a6174696f6e2063616c6c6261636b206661696c6564000081525060200191505060405180910390fd5b5050505050565b600080600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050805491505090565b610615610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b9050610701826103d0565b610773576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420636f6e74726163742061646472657373000000000000000081525060200191505060405180910390fd5b8181558173ffffffffffffffffffffffffffffffffffffffff167fab64f92ab780ecbf4f3866f57cee465ff36c89450dcce20237ca7a8d81fb7d1360405160405180910390a25050565b6107c5610871565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e64657220776173206e6f74206f776e657200000000000000000000000081525060200191505060405180910390fd5b61086e816108bd565b50565b600080600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b9050805491505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206265203000000000000000000000000000000081525060200191505060405180910390fd5b6000600160405180807f656970313936372e70726f78792e61646d696e000000000000000000000000008152506013019050604051809103902060001c0360001b90508181558173ffffffffffffffffffffffffffffffffffffffff167f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe260405160405180910390a2505056fea265627a7a7231582045533c82f72269f659b782d65f9df44acb028dbd1cac773ca302071204faa33364736f6c634300050d0032a265627a7a723158205c32c21bd401ccdda130a41c2f39866d0d923078ec9c08d3b6c493e609edcc4364736f6c634300050d0032",
  "sourceMap": "186:1387:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;186:1387:28;;;;;;;",
  "deployedSourceMap": "186:1387:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;186:1387:28;;;;;;;;;;;;;;;;;;;;;;;;1225:346;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1225:346:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1225:346:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1225:346:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1225:346:28;;;;;;;;;;;;:::i;:::-;;673:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:346;1324:32;1359;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1359:32:28;1324:67;;1397:5;:37;;;1435:14;1451:12;;1397:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1397:67:28;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1397:67:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1397:67:28;;;;1470:5;:24;;;1495:5;1470:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:31:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1470:31:28;;;;1543:5;1513:53;;1528:5;1513:53;;;1551:14;1513:53;;;;;;;;;;;;;;;;;;;;;;1225:346;;;;;:::o;673:117::-;724:7;733;742;751;774:1;777;780;783;766:19;;;;;;;;;;;;;;;;;;;;673:117;;;;:::o;186:1387::-;;;;;;;;:::o",
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-17T13:39:53.710Z"
}