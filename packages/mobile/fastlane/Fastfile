fastlane_version '2.94.0'

default_platform(:android)

$mapping_path = 'android/app/build/outputs/mapping/'
$mapping_file = '/mapping.txt'
$bundle_name = 'org.celo.mobile.'

def get_mapping_path(env)
  return $mapping_path + env + $mapping_file
end

def get_bundle(env)
  return $bundle_name + env
end

def fastlane_supply(env, track, bundle_suffix)
  return supply(
    json_key: 'fastlane/google-play-service-account.json',
    track: track,
    track_promote_to: track,
    package_name: get_bundle(bundle_suffix),
    mapping: get_mapping_path(env),
    skip_upload_apk: true
  )
end

platform :android do

  # Android Lanes

  desc 'Clean the Android application'
  lane :clean do
    gradle(task: 'clean', project_dir: 'android/')
  end

  desc 'Build the Android application - requires environment param'
  lane :build do |options|
    clean
    sh('yarn', 'run', 'build:sdk', options[:sdkEnv])
    environment = options[:environment].capitalize
    ENV["GRADLE_OPTS"] = '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx256m -XX:+HeapDumpOnOutOfMemoryError"'
    gradle(task: 'bundle' + environment + 'JsAndAssets', project_dir: 'android/')
    ENV["GRADLE_OPTS"] = '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx3500m -XX:+HeapDumpOnOutOfMemoryError"'
    if options[:buildApk]
      gradle(task: 'assemble', build_type: environment, project_dir: 'android/', flags: '-x bundle' + environment + 'JsAndAssets')
    else
      gradle(task: 'bundle', build_type: environment, project_dir: 'android/', flags: '-x bundle' + environment + 'JsAndAssets')
    end
  end

  desc 'Ship Integration to Playstore Internal'
  lane :integration do
    env = 'integration'
    sdkEnv = 'integration'
    build(environment: env, sdkEnv: sdkEnv)
    fastlane_supply(env, 'internal', env)
  end

  desc 'Ship Staging to Playstore Internal'
  lane :staging do
    env = 'staging'
    sdkEnv = 'alfajoresstaging'
    build(environment: env, sdkEnv: sdkEnv)
    fastlane_supply(env, 'internal', env)
  end

  desc 'Ship Production to Playstore Alpha.'
  lane :production do
    env = 'release'
    sdkEnv = 'argentinaproduction'
    build(environment: env, sdkEnv: sdkEnv)
    fastlane_supply(env, 'alpha', 'production')
  end

  desc 'Ship Alfajores to Playstore Internal'
  lane :alfajores do
    env = 'alfajores'
    sdkEnv = 'alfajores'
    build(environment: env, sdkEnv: sdkEnv)
    fastlane_supply(env, 'internal', env)
  end

  desc 'Ship Pilot to Playstore Internal'
  lane :pilotapp do
    env = 'pilot'
    sdkEnv = 'pilot'
    build(environment: env, sdkEnv: sdkEnv)
    fastlane_supply(env, 'internal', env)
  end

  desc 'Build an Android apk'
  lane :build_apk do |options|
    env = options[:env]
    sdkEnv = options[:sdkEnv]
    build(environment: env, sdkEnv: sdkEnv, buildApk: true)
  end

  desc 'Build an Android bundle'
  lane :build_bundle do |options|
    env = options[:env]
    sdkEnv = options[:sdkEnv]
    build(environment: env, sdkEnv: sdkEnv)
  end
end


