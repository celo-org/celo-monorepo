// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with backup completed 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "paddingBottom": 20,
        "paddingHorizontal": 20,
      }
    }
  >
    <View>
      <View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Light",
              "fontSize": 22,
              "paddingBottom": 20,
              "textAlign": "center",
            }
          }
        >
          yourBackupKey
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "marginBottom": 20,
            }
          }
        >
          backupKeySummary
        </Text>
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 2,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Hind-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              backupKey
            </Text>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Object {
                    "color": "#42D689",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 22,
                  }
                }
              >
                global:copy
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignContent": "center",
                "backgroundColor": "#EEEEEE",
                "borderRadius": 4,
                "justifyContent": "center",
                "marginTop": 10,
                "padding": 14,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#81868B",
              "fontFamily": "Hind-Regular",
              "fontSize": 14,
              "lineHeight": 18,
              "marginHorizontal": 3,
              "marginTop": 25,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#81868B",
                  "fontFamily": "Hind-Regular",
                  "fontSize": 14,
                  "lineHeight": 18,
                  "marginHorizontal": 3,
                  "marginTop": 25,
                },
                Object {
                  "fontFamily": "Hind-Bold",
                },
              ]
            }
          >
            global:warning
          </Text>
          securityTip
        </Text>
      </View>
    </View>
  </RCTScrollView>
</SafeAreaView>
`;

exports[`renders correctly with backup not completed 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "paddingBottom": 20,
        "paddingHorizontal": 20,
      }
    }
  >
    <View>
      <View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Light",
              "fontSize": 22,
              "paddingBottom": 20,
              "textAlign": "center",
            }
          }
        >
          yourBackupKey
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "marginBottom": 20,
            }
          }
        >
          backupKeySummary
        </Text>
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 2,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#2E3338",
                  "fontFamily": "Hind-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 24,
                }
              }
            >
              backupKey
            </Text>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Object {
                    "color": "#42D689",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 22,
                  }
                }
              >
                global:copy
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "alignContent": "center",
                "backgroundColor": "#EEEEEE",
                "borderRadius": 4,
                "justifyContent": "center",
                "marginTop": 10,
                "padding": 14,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#81868B",
              "fontFamily": "Hind-Regular",
              "fontSize": 14,
              "lineHeight": 18,
              "marginHorizontal": 3,
              "marginTop": 25,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#81868B",
                  "fontFamily": "Hind-Regular",
                  "fontSize": 14,
                  "lineHeight": 18,
                  "marginHorizontal": 3,
                  "marginTop": 25,
                },
                Object {
                  "fontFamily": "Hind-Bold",
                },
              ]
            }
          >
            global:warning
          </Text>
          securityTip
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
    >
      <AndroidSwitch
        accessibilityRole="button"
        enabled={true}
        on={false}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        thumbTintColor="#FFFFFF"
        trackColorForFalse="#D1D5D8"
        trackColorForTrue="#42D689"
        trackTintColor="#D1D5D8"
      />
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Hind-SemiBold",
            "fontSize": 16,
            "lineHeight": 24,
            "paddingLeft": 10,
            "paddingTop": 3,
          }
        }
      >
        savedConfirmation
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 3,
            "flexDirection": "row",
          },
          null,
          null,
          undefined,
          Object {
            "backgroundColor": "#A3EBC6",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            Object {
              "backgroundColor": "#A3EBC6",
            },
            Object {
              "height": 50,
            },
            Object {
              "borderWidth": 0,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontFamily": "Hind-SemiBold",
                  "fontSize": 16,
                },
                Object {
                  "color": "#FFFFFF",
                },
                Object {
                  "paddingLeft": 5,
                  "paddingRight": 5,
                },
              ]
            }
          >
            global:continue
          </Text>
        </View>
      </View>
    </View>
  </View>
</SafeAreaView>
`;
