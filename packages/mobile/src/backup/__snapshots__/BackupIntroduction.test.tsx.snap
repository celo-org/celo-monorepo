// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BackupIntroduction renders correctly when backup completed 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomColor": AnimatedValue {
          " __value": NaN,
        },
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 62,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginBottom": 0,
          "marginLeft": 4,
          "opacity": 1,
          "padding": 8,
        }
      }
    >
      <svg
        fill="none"
        height="32"
        viewBox="0 0 32 32"
        width="32"
      >
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="9.75"
          y2="9.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="15.75"
          y2="15.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="21.75"
          y2="21.75"
        />
      </svg>
    </View>
    <View
      style={
        Object {
          "width": 45,
        }
      }
    />
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingHorizontal": 16,
        "paddingTop": 24,
      }
    }
  >
    <View>
      <View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Jost-Medium",
              "fontSize": 22,
              "lineHeight": 28,
            }
          }
        >
          postSetupTitle
        </Text>
        <View
          style={
            Object {
              "backgroundColor": "#FFF9EE",
              "marginTop": 16,
              "padding": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Regular",
                "fontSize": 18,
                "lineHeight": 24,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
              "marginVertical": 16,
            }
          }
        >
          postSetupBody
        </Text>
      </View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "paddingVertical": 16,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackgroundBorderless",
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <Text
            style={
              Object {
                "color": "#1AB775",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            postSetupCTA
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`BackupIntroduction renders correctly when backup not complete 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomColor": AnimatedValue {
          " __value": NaN,
        },
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 62,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginBottom": 0,
          "marginLeft": 4,
          "opacity": 1,
          "padding": 8,
        }
      }
    >
      <svg
        fill="none"
        height="32"
        viewBox="0 0 32 32"
        width="32"
      >
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="9.75"
          y2="9.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="15.75"
          y2="15.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="21.75"
          y2="21.75"
        />
      </svg>
    </View>
    <View
      style={
        Object {
          "width": 45,
        }
      }
    />
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 24,
      }
    }
  >
    <View>
      <svg
        fill="none"
        height={32}
        viewBox="0 0 32 32"
        width={32}
      >
        <g
          filter="url(#prefix__filter0_d)"
        >
          <path
            d="M18.39 26.77c1.072-8.36 5.002-13.12 10.943-17.434l-3.037-4.003c-3.886 2.98-8.13 7.205-10.095 13.032-1.608-4.76-4.958-8.94-10.363-13.032L2.667 9.425C9.41 14.228 12.807 19.61 13.744 26.77h4.646z"
            fill="url(#prefix__paint0_linear)"
          />
        </g>
        <defs>
          <linearGradient
            gradientUnits="userSpaceOnUse"
            id="prefix__paint0_linear"
            x1={34.337}
            x2={28.937}
            y1={10.054}
            y2={30.49}
          >
            <stop
              offset={0.118}
              stopColor="#35D07F"
            />
            <stop
              offset={0.802}
              stopColor="#FBCC5C"
            />
          </linearGradient>
        </defs>
      </svg>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Book",
            "fontSize": 26,
            "lineHeight": 32,
            "paddingBottom": 16,
            "paddingTop": 16,
          }
        }
      >
        introTitle
      </Text>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 18,
            "lineHeight": 24,
            "paddingBottom": 16,
          }
        }
      >
        introBody
      </Text>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 100,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#1AB775",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 120,
                "opacity": undefined,
                "paddingHorizontal": 16,
                "paddingVertical": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 22,
                }
              }
            >
              introPrimaryAction
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
