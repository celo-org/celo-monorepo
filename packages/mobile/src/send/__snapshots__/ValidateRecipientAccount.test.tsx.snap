// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ValidateRecipientAccount renders correctly when full validation required 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "justifyContent": "space-between",
        "padding": 20,
        "paddingTop": 40,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <View>
        <View>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 15,
                "textAlign": "center",
              }
            }
          >
            confirmAccountNumber.body1Full
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 15,
                "textAlign": "center",
              }
            }
          >
            confirmAccountNumber.body2Full
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-SemiBold",
                "fontSize": 16,
                "lineHeight": 24,
                "marginTop": 20,
                "textAlign": "center",
              }
            }
          >
            accountInputHeaderB
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#FFF",
                  "borderColor": "#D1D5D8",
                  "borderRadius": 3,
                  "borderWidth": 1,
                  "flex": 0,
                  "height": 50,
                  "marginVertical": 5,
                },
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="0xf1b1d5a6e7728g309c4a025k122d71ad75a61976"
              rejectResponderTermination={true}
              shouldShowClipboard={[Function]}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#D1D5D8",
                  "borderRadius": 3,
                  "flex": 1,
                  "fontFamily": "Hind-Regular",
                  "padding": 8,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <Text
        onPress={[Function]}
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Hind-Regular",
            "fontSize": 14,
            "lineHeight": 18,
            "marginBottom": 10,
            "marginTop": 20,
            "textAlign": "center",
            "textDecorationLine": "underline",
          }
        }
      >
        confirmAccountNumber.help
      </Text>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 3,
          "flexDirection": "row",
        },
        null,
        null,
        undefined,
        Object {
          "backgroundColor": "#42D689",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      nativeBackgroundAndroid={
        Object {
          "attribute": "selectableItemBackground",
          "type": "ThemeAttrAndroid",
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "#42D689",
          },
          Object {
            "height": 50,
          },
          Object {
            "borderWidth": 0,
          },
        ]
      }
      testID="ConfirmAccountButton"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Hind-SemiBold",
                "fontSize": 16,
              },
              Object {
                "color": "#FFFFFF",
              },
              Object {
                "paddingLeft": 5,
                "paddingRight": 5,
              },
            ]
          }
        >
          confirmAccount.button
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 4,
            "marginHorizontal": 10,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Bold",
              "fontSize": 18,
              "marginVertical": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.header
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingBottom": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.body1
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingBottom": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.body2
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-evenly",
              "marginTop": 25,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#42D689",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 14,
                    "lineHeight": 18,
                  },
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 24,
                    "paddingRight": 20,
                  },
                ]
              }
            >
              global:close
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</SafeAreaView>
`;

exports[`ValidateRecipientAccount renders correctly when partial validation required 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flexGrow": 1,
        "justifyContent": "space-between",
        "padding": 20,
        "paddingTop": 40,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <View>
        <View>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 15,
                "textAlign": "center",
              }
            }
          >
            confirmAccountNumber.body1Partial
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 15,
                "textAlign": "center",
              }
            }
          >
            confirmAccountNumber.body2Partial
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-SemiBold",
                "fontSize": 16,
                "lineHeight": 24,
                "marginTop": 20,
                "textAlign": "center",
              }
            }
          >
            accountInputHeaderA
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 20,
                "paddingRight": 10,
                "paddingVertical": 10,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "backgroundColor": "#FFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "flex": 0,
                    "height": 50,
                    "marginVertical": 5,
                    "width": 50,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                maxLength={1}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="k"
                rejectResponderTermination={true}
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "flex": 1,
                    "fontFamily": "Hind-Regular",
                    "padding": 8,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "backgroundColor": "#FFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "flex": 0,
                    "height": 50,
                    "marginVertical": 5,
                    "width": 50,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                maxLength={1}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="0"
                rejectResponderTermination={true}
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "flex": 1,
                    "fontFamily": "Hind-Regular",
                    "padding": 8,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "backgroundColor": "#FFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "flex": 0,
                    "height": 50,
                    "marginVertical": 5,
                    "width": 50,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                maxLength={1}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="F"
                rejectResponderTermination={true}
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "flex": 1,
                    "fontFamily": "Hind-Regular",
                    "padding": 8,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "backgroundColor": "#FFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "flex": 0,
                    "height": 50,
                    "marginVertical": 5,
                    "width": 50,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                maxLength={1}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="4"
                rejectResponderTermination={true}
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#D1D5D8",
                    "borderRadius": 3,
                    "flex": 1,
                    "fontFamily": "Hind-Regular",
                    "padding": 8,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
          </View>
        </View>
      </View>
      <Text
        onPress={[Function]}
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Hind-Regular",
            "fontSize": 14,
            "lineHeight": 18,
            "marginBottom": 10,
            "marginTop": 20,
            "textAlign": "center",
            "textDecorationLine": "underline",
          }
        }
      >
        confirmAccountNumber.help
      </Text>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 3,
          "flexDirection": "row",
        },
        null,
        null,
        undefined,
        Object {
          "backgroundColor": "#42D689",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      nativeBackgroundAndroid={
        Object {
          "attribute": "selectableItemBackground",
          "type": "ThemeAttrAndroid",
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "#42D689",
          },
          Object {
            "height": 50,
          },
          Object {
            "borderWidth": 0,
          },
        ]
      }
      testID="ConfirmAccountButton"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Hind-SemiBold",
                "fontSize": 16,
              },
              Object {
                "color": "#FFFFFF",
              },
              Object {
                "paddingLeft": 5,
                "paddingRight": 5,
              },
            ]
          }
        >
          confirmAccount.button
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 4,
            "marginHorizontal": 10,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Bold",
              "fontSize": 18,
              "marginVertical": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.header
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingBottom": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.body1
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Hind-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "paddingBottom": 15,
              "textAlign": "center",
            }
          }
        >
          helpModal.body2
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-evenly",
              "marginTop": 25,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#42D689",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 14,
                    "lineHeight": 18,
                  },
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 24,
                    "paddingRight": 20,
                  },
                ]
              }
            >
              global:close
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</SafeAreaView>
`;
