// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSaver renders correctly 1`] = `
<RCTScrollView
  keyboardShouldPersistTaps="handled"
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#EEEEEE",
          "marginLeft": 15,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 20,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            enableDataSaver
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "justifyContent": "center",
              },
            ]
          }
        >
          <AndroidSwitch
            accessibilityRole="button"
            enabled={true}
            on={false}
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            thumbTintColor="#FFFFFF"
            trackColorForFalse="#D1D5D8"
            trackColorForTrue="#42D689"
            trackTintColor="#D1D5D8"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
          }
        }
      >
        <Text>
          dataSaverDetail
        </Text>
      </View>
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={true}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 4,
              "marginHorizontal": 10,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Bold",
                "fontSize": 18,
                "marginVertical": 15,
                "textAlign": "center",
              }
            }
          >
            promptZeroSyncModal.header
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            promptZeroSyncModal.body
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
                "marginTop": 25,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingRight": 20,
                    },
                  ]
                }
              >
                global:goBack
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingLeft": 20,
                    },
                  ]
                }
              >
                promptZeroSyncModal.switchToDataSaver
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 4,
              "marginHorizontal": 10,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Bold",
                "fontSize": 18,
                "marginVertical": 15,
                "textAlign": "center",
              }
            }
          >
            restartModalSwitchOff.header
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            restartModalSwitchOff.body
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
                "marginTop": 25,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingRight": 20,
                    },
                  ]
                }
              >
                global:cancel
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingLeft": 20,
                    },
                  ]
                }
              >
                restartModalSwitchOff.restart
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 4,
              "marginHorizontal": 10,
              "padding": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Bold",
                "fontSize": 18,
                "marginVertical": 15,
                "textAlign": "center",
              }
            }
          >
            restartModalSwitchOn.header
          </Text>
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Hind-Regular",
                "fontSize": 16,
                "lineHeight": 24,
              }
            }
          >
            restartModalSwitchOn.body
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
                "marginTop": 25,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingRight": 20,
                    },
                  ]
                }
              >
                global:cancel
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 14,
                      "lineHeight": 18,
                    },
                    Object {
                      "color": "#42D689",
                      "fontFamily": "Hind-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 24,
                      "paddingLeft": 20,
                    },
                  ]
                }
              >
                restartModalSwitchOn.understand
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</RCTScrollView>
`;
