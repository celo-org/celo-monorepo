// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile renders correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <RNCSafeAreaView
      edges={
        Array [
          "bottom",
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "paddingBottom": 15,
            "paddingLeft": 10,
            "paddingRight": 15,
            "paddingTop": 30,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Array [
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "borderRadius": 60,
                    "height": 120,
                    "justifyContent": "center",
                    "width": 120,
                  },
                  Object {
                    "backgroundColor": "#B4B9BD",
                  },
                ],
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Text
              style={Object {}}
            >
              addPhoto
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#1AB775",
                  "borderRadius": 16,
                  "bottom": 0,
                  "height": 32,
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 0,
                  "width": 32,
                }
              }
            >
              <svg
                fill="none"
                height={16}
                style={Object {}}
                viewBox="0 0 16 16"
                width={16}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M5 3C5 1.89543 5.89543 1 7 1H9C10.1046 1 11 1.89543 11 3H13C14.1046 3 15 3.89543 15 5V11C15 12.1046 14.1046 13 13 13H3C1.89543 13 1 12.1046 1 11V5C1 3.89543 1.89543 3 3 3H5ZM8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10Z"
                  fill="#1AB775"
                  fill-rule="evenodd"
                  style={Object {}}
                />
                <path
                  d="M5 3V3.5C5.27614 3.5 5.5 3.27614 5.5 3H5ZM11 3H10.5C10.5 3.27614 10.7239 3.5 11 3.5V3ZM7 0.5C5.61929 0.5 4.5 1.61929 4.5 3H5.5C5.5 2.17157 6.17157 1.5 7 1.5V0.5ZM9 0.5H7V1.5H9V0.5ZM11.5 3C11.5 1.61929 10.3807 0.5 9 0.5V1.5C9.82843 1.5 10.5 2.17157 10.5 3H11.5ZM13 2.5H11V3.5H13V2.5ZM15.5 5C15.5 3.61929 14.3807 2.5 13 2.5V3.5C13.8284 3.5 14.5 4.17157 14.5 5H15.5ZM15.5 11V5H14.5V11H15.5ZM13 13.5C14.3807 13.5 15.5 12.3807 15.5 11H14.5C14.5 11.8284 13.8284 12.5 13 12.5V13.5ZM3 13.5H13V12.5H3V13.5ZM0.5 11C0.5 12.3807 1.61929 13.5 3 13.5V12.5C2.17157 12.5 1.5 11.8284 1.5 11H0.5ZM0.5 5V11H1.5V5H0.5ZM3 2.5C1.61929 2.5 0.5 3.61929 0.5 5H1.5C1.5 4.17157 2.17157 3.5 3 3.5V2.5ZM5 2.5H3V3.5H5V2.5ZM9.5 8C9.5 8.82843 8.82843 9.5 8 9.5V10.5C9.38071 10.5 10.5 9.38071 10.5 8H9.5ZM8 6.5C8.82843 6.5 9.5 7.17157 9.5 8H10.5C10.5 6.61929 9.38071 5.5 8 5.5V6.5ZM6.5 8C6.5 7.17157 7.17157 6.5 8 6.5V5.5C6.61929 5.5 5.5 6.61929 5.5 8H6.5ZM8 9.5C7.17157 9.5 6.5 8.82843 6.5 8H5.5C5.5 9.38071 6.61929 10.5 8 10.5V9.5Z"
                  fill="white"
                  style={Object {}}
                />
              </svg>
            </View>
          </View>
        </RNGestureHandlerButton>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            focusable={true}
            forwardedRef={[Function]}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            forwardedRef={[Function]}
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            statusBarTranslucent={true}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
          >
            <RNCSafeAreaView>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "padding": 16,
                    },
                    Object {
                      "borderRadius": 8,
                    },
                    Object {
                      "elevation": 12,
                      "shadowColor": "rgba(156, 164, 169, 0.4)",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 12,
                    },
                    Array [
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "maxHeight": "100%",
                        "padding": 24,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "padding": 0,
                      },
                    ],
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "marginVertical": 16,
                        },
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-Regular",
                          "fontSize": 18,
                          "lineHeight": 24,
                        },
                      ]
                    }
                  >
                    chooseFromLibrary
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#EDEEEF",
                        "height": 1,
                        "width": "100%",
                      },
                      Object {},
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "marginVertical": 16,
                        },
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-Regular",
                          "fontSize": 18,
                          "lineHeight": 24,
                        },
                      ]
                    }
                  >
                    takePhoto
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#EDEEEF",
                        "height": 1,
                        "width": "100%",
                      },
                      Object {
                        "backgroundColor": "#B4B9BD",
                      },
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "marginVertical": 16,
                        },
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 18,
                          "lineHeight": 24,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
              </View>
            </RNCSafeAreaView>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
          }
        }
      >
        <View
          style={
            Object {
              "borderBottomColor": "#EDEEEF",
              "borderBottomWidth": 1,
              "marginLeft": 16,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingRight": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                  }
                }
              >
                name
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "justifyContent": "flex-end",
                    "paddingLeft": 16,
                  },
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="yourName"
                rejectResponderTermination={true}
                style={
                  Array [
                    Object {
                      "color": "#2E3338",
                      "flex": 1,
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                      "paddingHorizontal": 0,
                      "paddingVertical": 12,
                    },
                    undefined,
                    Array [
                      Object {
                        "color": "#9CA4A9",
                        "minWidth": 160,
                        "paddingVertical": 0,
                        "textAlign": "right",
                      },
                      Object {
                        "color": "#9CA4A9",
                      },
                    ],
                  ]
                }
                testID="ProfileEditName"
                underlineColorAndroid="transparent"
                value="John Doe"
              />
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaView>
  </View>
</RCTScrollView>
`;
