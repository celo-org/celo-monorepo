// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Account renders correctly 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomColor": 0,
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "left": 0,
          "marginBottom": 0,
          "marginLeft": 16,
          "opacity": 1,
          "padding": 0,
          "position": "absolute",
        }
      }
      testID="Hamburguer"
    >
      <svg
        fill="none"
        height="32"
        viewBox="0 0 32 32"
        width="32"
      >
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="9.75"
          y2="9.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="15.75"
          y2="15.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="21.75"
          y2="21.75"
        />
      </svg>
    </View>
  </View>
  <RCTScrollView>
    <View>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Book",
            "fontSize": 26,
            "lineHeight": 32,
            "margin": 16,
          }
        }
        testID="SettingsTitle"
      >
        global:settings
      </Text>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    editProfile
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    confirmNumber
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    languageSettings
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#9CA4A9",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginRight": 8,
                      }
                    }
                  >
                    global:unknown
                  </Text>
                  <svg
                    height={20}
                    style={Object {}}
                    viewBox="0 0 15 16"
                    width={10}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8.70376 9.12461L2.12123 15.7071C1.73071 16.0976 1.09755 16.0976 0.707015 15.7071C0.316497 15.3166 0.316497 14.6834 0.707015 14.2929L6.58575 8.41419L0.707091 2.53553C0.316573 2.14501 0.316573 1.51185 0.707091 1.12131C1.09761 0.730797 1.73079 0.730797 2.12131 1.12131L8.70708 7.70708C9.0976 8.09762 9.0976 8.73078 8.70708 9.1213L8.70376 9.12461Z"
                      fill="#B4B9BD"
                      style={Object {}}
                    />
                  </svg>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    localCurrencySetting
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#9CA4A9",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginRight": 8,
                      }
                    }
                  >
                    MXN
                  </Text>
                  <svg
                    height={20}
                    style={Object {}}
                    viewBox="0 0 15 16"
                    width={10}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8.70376 9.12461L2.12123 15.7071C1.73071 16.0976 1.09755 16.0976 0.707015 15.7071C0.316497 15.3166 0.316497 14.6834 0.707015 14.2929L6.58575 8.41419L0.707091 2.53553C0.316573 2.14501 0.316573 1.51185 0.707091 1.12131C1.09761 0.730797 1.73079 0.730797 2.12131 1.12131L8.70708 7.70708C9.0976 8.09762 9.0976 8.73078 8.70708 9.1213L8.70376 9.12461Z"
                      fill="#B4B9BD"
                      style={Object {}}
                    />
                  </svg>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            securityAndData
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  requirePinOnAppOpen
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={false}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  enableDataSaver
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={false}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
            <View>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                dataSaverDetail
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  shareAnalytics
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={true}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
            <View>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                shareAnalytics_detail
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            legal
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    licenses
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    termsOfServiceLink
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    removeAccountTitle
                  </Text>
                </View>
              </View>
              <View>
                <Text
                  style={
                    Object {
                      "color": "#9CA4A9",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 14,
                      "lineHeight": 18,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    }
                  }
                >
                  removeAccountDetails
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    restartModalSwitchOff.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    restartModalSwitchOff.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    restartModalSwitchOff.restart
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptFornoModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptFornoModal.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:goBack
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    promptFornoModal.switchToDataSaver
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    accountKeyModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    accountKeyModal.body1
                    


                    accountKeyModal.body2
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:continue
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptConfirmRemovalModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptConfirmRemovalModal.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    promptConfirmRemovalModal.resetNow
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`Account renders correctly when dev mode active 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomColor": 0,
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 56,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "left": 0,
          "marginBottom": 0,
          "marginLeft": 16,
          "opacity": 1,
          "padding": 0,
          "position": "absolute",
        }
      }
      testID="Hamburguer"
    >
      <svg
        fill="none"
        height="32"
        viewBox="0 0 32 32"
        width="32"
      >
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="9.75"
          y2="9.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="15.75"
          y2="15.75"
        />
        <line
          stroke="#2E3338"
          strokeLinecap="round"
          strokeWidth="2.5"
          x1="7.25"
          x2="24.75"
          y1="21.75"
          y2="21.75"
        />
      </svg>
    </View>
  </View>
  <RCTScrollView>
    <View>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Jost-Book",
            "fontSize": 26,
            "lineHeight": 32,
            "margin": 16,
          }
        }
        testID="SettingsTitle"
      >
        global:settings
      </Text>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    editProfile
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    confirmNumber
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    languageSettings
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#9CA4A9",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginRight": 8,
                      }
                    }
                  >
                    global:unknown
                  </Text>
                  <svg
                    height={20}
                    style={Object {}}
                    viewBox="0 0 15 16"
                    width={10}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8.70376 9.12461L2.12123 15.7071C1.73071 16.0976 1.09755 16.0976 0.707015 15.7071C0.316497 15.3166 0.316497 14.6834 0.707015 14.2929L6.58575 8.41419L0.707091 2.53553C0.316573 2.14501 0.316573 1.51185 0.707091 1.12131C1.09761 0.730797 1.73079 0.730797 2.12131 1.12131L8.70708 7.70708C9.0976 8.09762 9.0976 8.73078 8.70708 9.1213L8.70376 9.12461Z"
                      fill="#B4B9BD"
                      style={Object {}}
                    />
                  </svg>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    localCurrencySetting
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#9CA4A9",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginRight": 8,
                      }
                    }
                  >
                    MXN
                  </Text>
                  <svg
                    height={20}
                    style={Object {}}
                    viewBox="0 0 15 16"
                    width={10}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8.70376 9.12461L2.12123 15.7071C1.73071 16.0976 1.09755 16.0976 0.707015 15.7071C0.316497 15.3166 0.316497 14.6834 0.707015 14.2929L6.58575 8.41419L0.707091 2.53553C0.316573 2.14501 0.316573 1.51185 0.707091 1.12131C1.09761 0.730797 1.73079 0.730797 2.12131 1.12131L8.70708 7.70708C9.0976 8.09762 9.0976 8.73078 8.70708 9.1213L8.70376 9.12461Z"
                      fill="#B4B9BD"
                      style={Object {}}
                    />
                  </svg>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            securityAndData
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  requirePinOnAppOpen
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={false}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  enableDataSaver
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={false}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
            <View>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                dataSaverDetail
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingRight": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "lineHeight": 22,
                    }
                  }
                >
                  shareAnalytics
                </Text>
              </View>
              <AndroidSwitch
                accessibilityRole="switch"
                enabled={true}
                on={true}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              />
            </View>
            <View>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                shareAnalytics_detail
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            legal
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    licenses
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    termsOfServiceLink
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
              },
              Object {
                "borderBottomColor": "#EDEEEF",
                "borderBottomWidth": 1,
                "marginLeft": 16,
                "marginTop": 44,
                "paddingLeft": 0,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#9CA4A9",
                "fontFamily": "Inter-Medium",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            
          </Text>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingRight": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                      }
                    }
                  >
                    removeAccountTitle
                  </Text>
                </View>
              </View>
              <View>
                <Text
                  style={
                    Object {
                      "color": "#9CA4A9",
                      "fontFamily": "Inter-Regular",
                      "fontSize": 14,
                      "lineHeight": 18,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    }
                  }
                >
                  removeAccountDetails
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "marginHorizontal": 10,
            "padding": 15,
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 13,
                "lineHeight": 16,
              }
            }
          >
            Session ID
          </Text>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "width": 215,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#9CA4A9",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 14,
                  "lineHeight": 18,
                }
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Toggle verification done
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Revoke Number Verification
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Reset app opened state
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Toggle backup state
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Show Debug Screen
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "margin": 4,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text>
              Trigger a crash
            </Text>
          </View>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    restartModalSwitchOff.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    restartModalSwitchOff.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    restartModalSwitchOff.restart
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptFornoModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptFornoModal.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:goBack
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    promptFornoModal.switchToDataSaver
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    accountKeyModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    accountKeyModal.body1
                    


                    accountKeyModal.body2
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:continue
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptConfirmRemovalModal.header
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    promptConfirmRemovalModal.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "color": "#9CA4A9",
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    promptConfirmRemovalModal.resetNow
                  </Text>
                </View>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
