// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FiatExchangeOptions renders correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "paddingVertical": 16,
    }
  }
>
  <View>
    <View>
      <Text
        style={
          Object {
            "color": "#2E3338",
            "fontFamily": "Inter-Regular",
            "fontSize": 16,
            "lineHeight": 22,
            "paddingBottom": 16,
            "paddingHorizontal": 16,
          }
        }
      >
        pleaseSelectProvider
      </Text>
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackgroundBorderless",
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#EDEEEF",
                  "borderBottomWidth": 1,
                  "marginLeft": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "testUri": "../../../packages/mobile/src/images/fiat-providers/moonpay.png",
                  }
                }
                style={
                  Object {
                    "height": 30,
                    "width": 104,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <SafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <View>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Jost-Medium",
                        "fontSize": 22,
                        "lineHeight": 28,
                        "marginBottom": 12,
                        "textAlign": "center",
                      }
                    }
                  >
                    explanationModal.title
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#2E3338",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "lineHeight": 22,
                        "marginBottom": 24,
                        "textAlign": "center",
                      }
                    }
                  >
                    explanationModal.body
                  </Text>
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                    "justifyContent": "space-around",
                    "maxWidth": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  nativeBackgroundAndroid={
                    Object {
                      "attribute": "selectableItemBackgroundBorderless",
                      "type": "ThemeAttrAndroid",
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1AB775",
                          "fontFamily": "Inter-SemiBold",
                          "fontSize": 16,
                          "lineHeight": 22,
                        },
                        Object {
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    global:dismiss
                  </Text>
                </View>
              </View>
            </View>
          </SafeAreaView>
        </View>
      </Modal>
    </View>
  </View>
</RCTScrollView>
`;
