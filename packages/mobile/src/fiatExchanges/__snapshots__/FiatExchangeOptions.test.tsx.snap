// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FiatExchangeOptions renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F8F9F9",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "paddingHorizontal": 16,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginTop": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Inter-Regular",
              "fontSize": 16,
              "lineHeight": 22,
              "marginRight": 12,
            }
          }
        >
          selectDigitalCurrency
        </Text>
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackground",
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <svg
            fill="none"
            height={14}
            style={Object {}}
            viewBox="0 0 16 16"
            width={14}
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle
              cx="8"
              cy="8"
              r="7"
              stroke="#B4B9BD"
              stroke-width="1.25"
              style={Object {}}
            />
            <path
              d="M8 12V7M8 6V5"
              stroke="#B4B9BD"
              stroke-width="1.25"
              style={Object {}}
            />
          </svg>
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "column",
            "marginTop": 8,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
          >
            <View
              style={
                Array [
                  Object {
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "padding": 16,
                  },
                  Object {
                    "borderBottomWidth": 0,
                    "borderTopLeftRadius": 8,
                    "borderTopRightRadius": 8,
                  },
                  Object {
                    "borderColor": "#1AB775",
                  },
                ]
              }
            >
              <svg
                fill="none"
                height="20"
                style={Object {}}
                viewBox="0 0 20 20"
                width="20"
              >
                <circle
                  cx="10"
                  cy="10"
                  r="9"
                  stroke="#1AB775"
                  strokeWidth={2}
                  style={Object {}}
                />
                <circle
                  cx="10"
                  cy="10"
                  fill="#1AB775"
                  r="6"
                  style={Object {}}
                />
              </svg>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Medium",
                      "fontSize": 16,
                      "lineHeight": 22,
                      "marginLeft": 16,
                    },
                    Object {},
                  ]
                }
              >
                celoDollar
              </Text>
              <Text
                style={
                  Object {
                    "color": "#9CA4A9",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginLeft": 4,
                  }
                }
              >
                (cUSD)
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
        <View
          style={
            Object {
              "backgroundColor": "#1AB775",
              "height": 1,
            }
          }
        />
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
          >
            <View
              style={
                Array [
                  Object {
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "padding": 16,
                  },
                  Object {
                    "borderBottomLeftRadius": 8,
                    "borderBottomRightRadius": 8,
                    "borderTopWidth": 0,
                  },
                  Object {
                    "borderColor": "#B4B9BD",
                  },
                ]
              }
            >
              <svg
                fill="none"
                height="20"
                style={Object {}}
                viewBox="0 0 20 20"
                width="20"
              >
                <circle
                  cx="10"
                  cy="10"
                  r="9"
                  stroke="#B4B9BD"
                  strokeWidth={2}
                  style={Object {}}
                />
              </svg>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2E3338",
                      "fontFamily": "Inter-Medium",
                      "fontSize": 16,
                      "lineHeight": 22,
                      "marginLeft": 16,
                    },
                    Object {},
                  ]
                }
              >
                CELO
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "flexDirection": "column",
        "paddingHorizontal": 16,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#2E3338",
          "fontFamily": "Inter-Medium",
          "fontSize": 14,
          "lineHeight": 18,
          "marginTop": 16,
        }
      }
    >
      selectPaymentMethod
    </Text>
    <View
      style={
        Object {
          "borderColor": "#B4B9BD",
          "borderRadius": 8,
          "borderWidth": 1,
          "flexDirection": "column",
          "marginTop": 8,
        }
      }
    >
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "padding": 8,
              }
            }
          >
            <svg
              fill="none"
              height="20"
              style={Object {}}
              viewBox="0 0 20 20"
              width="20"
            >
              <circle
                cx="10"
                cy="10"
                r="9"
                stroke="#B4B9BD"
                strokeWidth={2}
                style={Object {}}
              />
            </svg>
            <Text
              style={
                Array [
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "marginLeft": 8,
                  },
                  Object {},
                ]
              }
            >
              payWithFiat
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "padding": 8,
              }
            }
          >
            <svg
              fill="none"
              height="20"
              style={Object {}}
              viewBox="0 0 20 20"
              width="20"
            >
              <circle
                cx="10"
                cy="10"
                r="9"
                stroke="#1AB775"
                strokeWidth={2}
                style={Object {}}
              />
              <circle
                cx="10"
                cy="10"
                fill="#1AB775"
                r="6"
                style={Object {}}
              />
            </svg>
            <Text
              style={
                Array [
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                    "marginLeft": 8,
                  },
                  Object {},
                ]
              }
            >
              payWithExchange
            </Text>
          </View>
        </View>
      </RNGestureHandlerButton>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
          Object {
            "alignSelf": "center",
            "marginBottom": 24,
            "marginTop": 40,
            "width": "50%",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 100,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          nativeBackgroundAndroid={
            Object {
              "attribute": "selectableItemBackground",
              "type": "ThemeAttrAndroid",
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#1AB775",
              "flexGrow": 1,
              "height": 48,
              "justifyContent": "center",
              "opacity": undefined,
              "paddingHorizontal": 24,
              "paddingVertical": 5,
            }
          }
          testID="GoToProviderButton"
        >
          <Text
            style={
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            global:next
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={true}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <RNCSafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Jost-Medium",
                    "fontSize": 22,
                    "lineHeight": 28,
                    "marginBottom": 12,
                    "textAlign": "center",
                  }
                }
              >
                fundingEducationDialog.title
              </Text>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginBottom": 24,
                    "textAlign": "center",
                  }
                }
              >
                <Text
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#1AB775",
                    }
                  }
                />
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "space-around",
                "maxWidth": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                fundingEducationDialog.dismiss
              </Text>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
</View>
`;
