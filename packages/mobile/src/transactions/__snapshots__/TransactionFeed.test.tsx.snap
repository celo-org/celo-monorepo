// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders for error 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "paddingHorizontal": 20,
      "paddingVertical": 20,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#FD785B",
        "borderRadius": 15,
        "height": 30,
        "marginVertical": 20,
        "width": 30,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#81868B",
          "fontFamily": "Hind-Regular",
          "fontSize": 16,
          "lineHeight": 24,
        },
        Object {
          "marginBottom": 10,
          "textAlign": "center",
        },
      ]
    }
  >
    errorLoadingActivity.0
  </Text>
  <Text
    style={
      Array [
        Object {
          "color": "#81868B",
          "fontFamily": "Hind-Regular",
          "fontSize": 16,
          "lineHeight": 24,
        },
        Object {
          "marginBottom": 10,
          "textAlign": "center",
        },
      ]
    }
  >
    errorLoadingActivity.1
  </Text>
</View>
`;

exports[`renders for gold to dollar exchange properly 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  data={
    Array [
      Object {
        "__typename": "TokenExchange",
        "amount": Object {
          "currencyCode": "cUSD",
          "localAmount": null,
          "value": "-30",
        },
        "hash": "0x00000000000000000000",
        "makerAmount": Object {
          "currencyCode": "cUSD",
          "localAmount": null,
          "value": "30",
        },
        "status": "Complete",
        "takerAmount": Object {
          "currencyCode": "cGLD",
          "localAmount": null,
          "value": "200",
        },
        "timestamp": 1542306118,
        "type": "EXCHANGE",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={true}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        nativeBackgroundAndroid={
          Object {
            "attribute": "selectableItemBackground",
            "type": "ThemeAttrAndroid",
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "column",
                "height": 40,
                "justifyContent": "center",
                "width": 40,
              }
            }
          >
            <Image
              resizeMode="contain"
              source={
                Object {
                  "testUri": "../../../packages/mobile/src/images/exchangeGreenGold.png",
                }
              }
              style={
                Object {
                  "width": 40,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "marginLeft": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginTop": 3,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Hind-SemiBold",
                    "fontSize": 14,
                    "lineHeight": 18,
                  }
                }
              >
                exchange
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                    },
                    Array [
                      Object {
                        "marginLeft": "auto",
                        "paddingLeft": 10,
                      },
                      Object {
                        "color": "#81868B",
                        "fontFamily": "Hind-Regular",
                        "fontSize": 15,
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                -
                $
                39.90
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#42D689",
                    },
                    Array [
                      Object {
                        "fontFamily": "Hind-SemiBold",
                        "fontSize": 16,
                        "lineHeight": 20,
                      },
                      false,
                    ],
                  ]
                }
              >
                
                39.90
              </Text>
              <View
                style={
                  Object {
                    "paddingBottom": 8,
                    "paddingHorizontal": 5,
                  }
                }
              >
                <svg
                  fill="none"
                  height="6"
                  style={Object {}}
                  viewBox="0 0 9 6"
                  width="9"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clip-rule="evenodd"
                    d="M5.0998 5.45001L8.39993 3.02504L5.0998 0.600067V2.22512L0.399933 2.22512V3.82518L5.0998 3.82518V5.45001Z"
                    fill="rgba(0, 0, 0, .4)"
                    fill-rule="evenodd"
                    style={Object {}}
                  />
                </svg>
              </View>
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#FBCC5C",
                    },
                    Array [
                      Object {
                        "fontFamily": "Hind-SemiBold",
                        "fontSize": 16,
                        "lineHeight": 20,
                      },
                      false,
                    ],
                  ]
                }
              >
                
                200.00
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "marginTop": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#BDBDBD",
                    "fontFamily": "Hind-Regular",
                    "fontSize": 14,
                    "lineHeight": 18,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders for loading 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "paddingHorizontal": 20,
      "paddingVertical": 20,
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#42D689"
    hidesWhenStopped={true}
    size="large"
    style={
      Object {
        "height": 108,
        "marginVertical": 20,
        "width": 108,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#81868B",
          "fontFamily": "Hind-Regular",
          "fontSize": 16,
          "lineHeight": 24,
        },
        Object {
          "marginBottom": 10,
          "textAlign": "center",
        },
      ]
    }
  >
    loadingActivity
  </Text>
</View>
`;

exports[`renders for no transactions 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "paddingHorizontal": 20,
      "paddingVertical": 20,
    }
  }
>
  <Image
    resizeMode="contain"
    source={
      Object {
        "testUri": "../../../packages/mobile/src/images/shiny-dollar.png",
      }
    }
    style={
      Object {
        "height": 108,
        "marginVertical": 20,
        "width": 108,
      }
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#81868B",
          "fontFamily": "Hind-Regular",
          "fontSize": 16,
          "lineHeight": 24,
        },
        Object {
          "marginBottom": 10,
          "textAlign": "center",
        },
      ]
    }
  >
    noTransactionActivity
     
  </Text>
  <View
    accessible={true}
    focusable={true}
    hitSlop={
      Object {
        "bottom": 7,
        "left": 7,
        "right": 7,
        "top": 7,
      }
    }
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackground",
        "type": "ThemeAttrAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderRadius": 2,
          "flexDirection": "row",
          "paddingHorizontal": 16,
          "paddingVertical": 6,
        },
        Object {
          "backgroundColor": "#42D689",
          "paddingHorizontal": 18,
          "paddingVertical": 8,
        },
        Object {
          "alignSelf": "center",
          "marginTop": 20,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#81868B",
            "fontFamily": "Hind-SemiBold",
            "fontSize": 13,
            "lineHeight": 20,
            "textAlign": "center",
          },
          Object {
            "color": "#FFFFFF",
          },
          null,
          undefined,
        ]
      }
    >
      global:sendCeloDollars
    </Text>
  </View>
</View>
`;
