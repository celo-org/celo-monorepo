// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImportContactsScreen renders correctly 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#F9F5ED",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flex": 1,
        "justifyContent": "space-between",
        "padding": 24,
      }
    }
  >
    <View>
      <View>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Jost-Medium",
              "fontSize": 22,
              "lineHeight": 28,
              "paddingBottom": 16,
              "paddingTop": 48,
              "textAlign": "left",
            }
          }
          testID="ImportContactsScreenHeader"
        >
          contacts.header
        </Text>
        <Text
          style={
            Object {
              "color": "#2E3338",
              "fontFamily": "Inter-Medium",
              "fontSize": 16,
              "lineHeight": 22,
            }
          }
        >
          contacts.body
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "marginVertical": 20,
            }
          }
        >
          <AndroidSwitch
            accessibilityRole="switch"
            enabled={true}
            on={true}
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            thumbTintColor="#EDEEEF"
            trackColorForFalse="#B4B9BD"
            trackColorForTrue="#1AB775"
            trackTintColor="#1AB775"
          />
          <Text
            style={
              Object {
                "color": "#2E3338",
                "fontFamily": "Inter-Medium",
                "fontSize": 16,
                "lineHeight": 22,
                "paddingLeft": 8,
              }
            }
          >
            contacts.findSwitch
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 100,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackground",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#D6E7EF",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 120,
                  "opacity": 1,
                  "paddingHorizontal": 16,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#0C689C",
                    "fontFamily": "Inter-SemiBold",
                    "fontSize": 16,
                    "lineHeight": 22,
                  }
                }
              >
                global:connect
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <SafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "padding": 16,
              },
              Object {
                "borderRadius": 8,
              },
              Object {
                "elevation": 12,
                "shadowColor": "rgba(156, 164, 169, 0.4)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 12,
              },
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "maxHeight": "100%",
                  "padding": 24,
                },
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Jost-Medium",
                    "fontSize": 22,
                    "lineHeight": 28,
                    "marginBottom": 12,
                    "textAlign": "center",
                  }
                }
              >
                verificationSkipDialog.title
              </Text>
              <Text
                style={
                  Object {
                    "color": "#2E3338",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "marginBottom": 24,
                    "textAlign": "center",
                  }
                }
              >
                verificationSkipDialog.body
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "space-around",
                "maxWidth": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="VerificationSkipDialog/SecondaryAction"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "color": "#9CA4A9",
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                verificationSkipDialog.cancel
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              nativeBackgroundAndroid={
                Object {
                  "attribute": "selectableItemBackgroundBorderless",
                  "type": "ThemeAttrAndroid",
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="VerificationSkipDialog/PrimaryAction"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1AB775",
                      "fontFamily": "Inter-SemiBold",
                      "fontSize": 16,
                      "lineHeight": 22,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                verificationSkipDialog.confirm
              </Text>
            </View>
          </View>
        </View>
      </SafeAreaView>
    </View>
  </Modal>
</SafeAreaView>
`;
