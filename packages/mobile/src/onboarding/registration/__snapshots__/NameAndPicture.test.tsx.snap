// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NameAndPictureScreen renders correctly 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F9F6F0",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RNCSafeAreaView
    style={
      Object {
        "height": 35,
        "position": "absolute",
        "right": 10,
        "top": 10,
        "width": 60,
        "zIndex": 100,
      }
    }
  >
    <Text
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
         
    </Text>
  </RNCSafeAreaView>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 24,
        "paddingTop": 80,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
      >
        <View
          accessible={true}
          style={
            Array [
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "borderRadius": 60,
                  "height": 120,
                  "justifyContent": "center",
                  "width": 120,
                },
                Object {
                  "backgroundColor": "#A49B80",
                },
              ],
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            style={Object {}}
          >
            addPhoto
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#1AB775",
                "borderRadius": 16,
                "bottom": 0,
                "height": 32,
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "width": 32,
              }
            }
          >
            <svg
              fill="none"
              height={16}
              style={Object {}}
              viewBox="0 0 16 16"
              width={16}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M5 3C5 1.89543 5.89543 1 7 1H9C10.1046 1 11 1.89543 11 3H13C14.1046 3 15 3.89543 15 5V11C15 12.1046 14.1046 13 13 13H3C1.89543 13 1 12.1046 1 11V5C1 3.89543 1.89543 3 3 3H5ZM8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10Z"
                fill="#1AB775"
                fill-rule="evenodd"
                style={Object {}}
              />
              <path
                d="M5 3V3.5C5.27614 3.5 5.5 3.27614 5.5 3H5ZM11 3H10.5C10.5 3.27614 10.7239 3.5 11 3.5V3ZM7 0.5C5.61929 0.5 4.5 1.61929 4.5 3H5.5C5.5 2.17157 6.17157 1.5 7 1.5V0.5ZM9 0.5H7V1.5H9V0.5ZM11.5 3C11.5 1.61929 10.3807 0.5 9 0.5V1.5C9.82843 1.5 10.5 2.17157 10.5 3H11.5ZM13 2.5H11V3.5H13V2.5ZM15.5 5C15.5 3.61929 14.3807 2.5 13 2.5V3.5C13.8284 3.5 14.5 4.17157 14.5 5H15.5ZM15.5 11V5H14.5V11H15.5ZM13 13.5C14.3807 13.5 15.5 12.3807 15.5 11H14.5C14.5 11.8284 13.8284 12.5 13 12.5V13.5ZM3 13.5H13V12.5H3V13.5ZM0.5 11C0.5 12.3807 1.61929 13.5 3 13.5V12.5C2.17157 12.5 1.5 11.8284 1.5 11H0.5ZM0.5 5V11H1.5V5H0.5ZM3 2.5C1.61929 2.5 0.5 3.61929 0.5 5H1.5C1.5 4.17157 2.17157 3.5 3 3.5V2.5ZM5 2.5H3V3.5H5V2.5ZM9.5 8C9.5 8.82843 8.82843 9.5 8 9.5V10.5C9.38071 10.5 10.5 9.38071 10.5 8H9.5ZM8 6.5C8.82843 6.5 9.5 7.17157 9.5 8H10.5C10.5 6.61929 9.38071 5.5 8 5.5V6.5ZM6.5 8C6.5 7.17157 7.17157 6.5 8 6.5V5.5C6.61929 5.5 5.5 6.61929 5.5 8H6.5ZM8 9.5C7.17157 9.5 6.5 8.82843 6.5 8H5.5C5.5 9.38071 6.61929 10.5 8 10.5V9.5Z"
                fill="white"
                style={Object {}}
              />
            </svg>
          </View>
        </View>
      </RNGestureHandlerButton>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "padding": 0,
                    },
                  ],
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  chooseFromLibrary
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#EDEEEF",
                      "height": 1,
                      "width": "100%",
                    },
                    Object {},
                  ]
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  takePhoto
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#EDEEEF",
                      "height": 1,
                      "width": "100%",
                    },
                    Object {
                      "backgroundColor": "#B4B9BD",
                    },
                  ]
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-SemiBold",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  global:cancel
                </Text>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <View
        style={
          Object {
            "marginBottom": 32,
            "marginTop": 24,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#A49B80",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 13,
                "lineHeight": 16,
              },
              Object {
                "marginBottom": 8,
              },
            ]
          }
        >
          fullName
        </Text>
        <View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              enablesReturnKeyAutomatically={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="fullNamePlaceholder"
              placeholderTextColor="#B4B9BD"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#2E3338",
                    "flex": 1,
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "paddingHorizontal": 0,
                    "paddingVertical": 12,
                  },
                  undefined,
                  undefined,
                ]
              }
              testID="NameEntry"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#A49B80",
                "height": 1,
                "opacity": 0.2,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 100,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={false}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "rippleRadius": undefined,
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#D6EAF3",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 120,
                "opacity": 0.5,
                "paddingHorizontal": 24,
                "paddingVertical": 5,
              }
            }
            testID="NameAndPictureContinueButton"
          >
            <Text
              style={
                Object {
                  "color": "#0768AE",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 22,
                }
              }
            >
              global:next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    collapsable={false}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        Object {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;

exports[`NameAndPictureScreen renders with an error 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F9F6F0",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RNCSafeAreaView
    style={
      Object {
        "height": 35,
        "position": "absolute",
        "right": 10,
        "top": 10,
        "width": 60,
        "zIndex": 100,
      }
    }
  >
    <Text
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
         
    </Text>
  </RNCSafeAreaView>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 24,
        "paddingTop": 80,
      }
    }
    keyboardShouldPersistTaps="always"
  >
    <View>
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
      >
        <View
          accessible={true}
          style={
            Array [
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "borderRadius": 60,
                  "height": 120,
                  "justifyContent": "center",
                  "width": 120,
                },
                Object {
                  "backgroundColor": "#A49B80",
                },
              ],
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            style={Object {}}
          >
            addPhoto
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#1AB775",
                "borderRadius": 16,
                "bottom": 0,
                "height": 32,
                "justifyContent": "center",
                "position": "absolute",
                "right": 0,
                "width": 32,
              }
            }
          >
            <svg
              fill="none"
              height={16}
              style={Object {}}
              viewBox="0 0 16 16"
              width={16}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M5 3C5 1.89543 5.89543 1 7 1H9C10.1046 1 11 1.89543 11 3H13C14.1046 3 15 3.89543 15 5V11C15 12.1046 14.1046 13 13 13H3C1.89543 13 1 12.1046 1 11V5C1 3.89543 1.89543 3 3 3H5ZM8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10Z"
                fill="#1AB775"
                fill-rule="evenodd"
                style={Object {}}
              />
              <path
                d="M5 3V3.5C5.27614 3.5 5.5 3.27614 5.5 3H5ZM11 3H10.5C10.5 3.27614 10.7239 3.5 11 3.5V3ZM7 0.5C5.61929 0.5 4.5 1.61929 4.5 3H5.5C5.5 2.17157 6.17157 1.5 7 1.5V0.5ZM9 0.5H7V1.5H9V0.5ZM11.5 3C11.5 1.61929 10.3807 0.5 9 0.5V1.5C9.82843 1.5 10.5 2.17157 10.5 3H11.5ZM13 2.5H11V3.5H13V2.5ZM15.5 5C15.5 3.61929 14.3807 2.5 13 2.5V3.5C13.8284 3.5 14.5 4.17157 14.5 5H15.5ZM15.5 11V5H14.5V11H15.5ZM13 13.5C14.3807 13.5 15.5 12.3807 15.5 11H14.5C14.5 11.8284 13.8284 12.5 13 12.5V13.5ZM3 13.5H13V12.5H3V13.5ZM0.5 11C0.5 12.3807 1.61929 13.5 3 13.5V12.5C2.17157 12.5 1.5 11.8284 1.5 11H0.5ZM0.5 5V11H1.5V5H0.5ZM3 2.5C1.61929 2.5 0.5 3.61929 0.5 5H1.5C1.5 4.17157 2.17157 3.5 3 3.5V2.5ZM5 2.5H3V3.5H5V2.5ZM9.5 8C9.5 8.82843 8.82843 9.5 8 9.5V10.5C9.38071 10.5 10.5 9.38071 10.5 8H9.5ZM8 6.5C8.82843 6.5 9.5 7.17157 9.5 8H10.5C10.5 6.61929 9.38071 5.5 8 5.5V6.5ZM6.5 8C6.5 7.17157 7.17157 6.5 8 6.5V5.5C6.61929 5.5 5.5 6.61929 5.5 8H6.5ZM8 9.5C7.17157 9.5 6.5 8.82843 6.5 8H5.5C5.5 9.38071 6.61929 10.5 8 10.5V9.5Z"
                fill="white"
                style={Object {}}
              />
            </svg>
          </View>
        </View>
      </RNGestureHandlerButton>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={true}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          statusBarTranslucent={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <RNCSafeAreaView>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "padding": 16,
                  },
                  Object {
                    "borderRadius": 8,
                  },
                  Object {
                    "elevation": 12,
                    "shadowColor": "rgba(156, 164, 169, 0.4)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 12,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "maxHeight": "100%",
                      "padding": 24,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "padding": 0,
                    },
                  ],
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  chooseFromLibrary
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#EDEEEF",
                      "height": 1,
                      "width": "100%",
                    },
                    Object {},
                  ]
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  takePhoto
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#EDEEEF",
                      "height": 1,
                      "width": "100%",
                    },
                    Object {
                      "backgroundColor": "#B4B9BD",
                    },
                  ]
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "marginVertical": 16,
                      },
                      Object {
                        "color": "#1AB775",
                        "fontFamily": "Inter-SemiBold",
                        "fontSize": 18,
                        "lineHeight": 24,
                      },
                    ]
                  }
                >
                  global:cancel
                </Text>
              </View>
            </View>
          </RNCSafeAreaView>
        </View>
      </Modal>
      <View
        style={
          Object {
            "marginBottom": 32,
            "marginTop": 24,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#A49B80",
                "fontFamily": "Inter-SemiBold",
                "fontSize": 13,
                "lineHeight": 16,
              },
              Object {
                "marginBottom": 8,
              },
            ]
          }
        >
          fullName
        </Text>
        <View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              enablesReturnKeyAutomatically={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="fullNamePlaceholder"
              placeholderTextColor="#B4B9BD"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#2E3338",
                    "flex": 1,
                    "fontFamily": "Inter-Regular",
                    "fontSize": 16,
                    "lineHeight": 22,
                    "paddingHorizontal": 0,
                    "paddingVertical": 12,
                  },
                  undefined,
                  undefined,
                ]
              }
              testID="NameEntry"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#A49B80",
                "height": 1,
                "opacity": 0.2,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 100,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={false}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "rippleRadius": undefined,
                "type": "ThemeAttrAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#D6EAF3",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 120,
                "opacity": 0.5,
                "paddingHorizontal": 24,
                "paddingVertical": 5,
              }
            }
            testID="NameAndPictureContinueButton"
          >
            <Text
              style={
                Object {
                  "color": "#0768AE",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 16,
                  "lineHeight": 22,
                }
              }
            >
              global:next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    collapsable={false}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
        },
        Object {
          "height": 0,
        },
        undefined,
      ]
    }
  />
</RNCSafeAreaView>
`;
