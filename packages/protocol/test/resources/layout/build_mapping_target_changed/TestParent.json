{
  "contractName": "TestParent",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestParent.sol\":\"TestParent\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestLibrary.sol\":{\"keccak256\":\"0xc312ec520a96e16ebc7a37a43637a5ea930bb3be41e04e6dd556ab45295e9964\",\"urls\":[\"bzzr://805ea51000346709cea45d3d4d49b351fa833b3ed5eaa6608901ed128f1747b0\"]},\"/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestParent.sol\":{\"keccak256\":\"0x55d0f66c432db4cdb37fad249c58d3d35a4121827aedb87706d38c382b5c52b1\",\"urls\":[\"bzzr://f89b7d216b94b98fa16abf59d3f160efaa735ee87ba39751fa193b315bc422ac\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b6104ef806100ce6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b146100a5578063f2fde38b146100c7575b600080fd5b61005961010b565b005b610063610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ad61026d565b604051808215151515815260200191505060405180910390f35b610109600480360360208110156100dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102cb565b005b61011361026d565b610185576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102af610351565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6102d361026d565b610345576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61034e81610359565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061049e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a7230582059bc406b16b68ac2ff2e41ed6da54a70e9e5b2ce408d7f25e0d86d9077cff7130029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b146100a5578063f2fde38b146100c7575b600080fd5b61005961010b565b005b610063610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ad61026d565b604051808215151515815260200191505060405180910390f35b610109600480360360208110156100dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102cb565b005b61011361026d565b610185576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102af610351565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6102d361026d565b610345576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61034e81610359565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061049e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a7230582059bc406b16b68ac2ff2e41ed6da54a70e9e5b2ce408d7f25e0d86d9077cff7130029",
  "sourceMap": "119:155:2:-;;;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;119:155:2;;788:96:3;833:15;867:10;860:17;;788:96;:::o;119:155:2:-;;;;;;;",
  "deployedSourceMap": "119:155:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;119:155:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;899:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;899:77::-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1970:107::-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;788:96:3:-;833:15;867:10;860:17;;788:96;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o",
  "source": "pragma solidity ^0.5.3;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./TestLibrary.sol\";\n\ncontract TestParent is Ownable {\n  using TestLibrary for TestLibrary.Thing;\n\n  uint256 private p;\n  address private q;\n\n  TestLibrary.Thing libraryThing;\n}\n",
  "sourcePath": "/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestParent.sol",
  "ast": {
    "absolutePath": "/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestParent.sol",
    "exportedSymbols": {
      "TestParent": [
        55
      ]
    },
    "id": 56,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 201,
        "src": "25:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestLibrary.sol",
        "file": "./TestLibrary.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 40,
        "src": "90:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 44,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 200,
              "src": "142:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$200",
                "typeString": "contract Ownable"
              }
            },
            "id": 45,
            "nodeType": "InheritanceSpecifier",
            "src": "142:7:2"
          }
        ],
        "contractDependencies": [
          82,
          200
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 55,
        "linearizedBaseContracts": [
          55,
          200,
          82
        ],
        "name": "TestParent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 48,
            "libraryName": {
              "contractScope": null,
              "id": 46,
              "name": "TestLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 39,
              "src": "160:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestLibrary_$39",
                "typeString": "library TestLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "154:40:2",
            "typeName": {
              "contractScope": null,
              "id": 47,
              "name": "TestLibrary.Thing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38,
              "src": "176:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Thing_$38_storage_ptr",
                "typeString": "struct TestLibrary.Thing"
              }
            }
          },
          {
            "constant": false,
            "id": 50,
            "name": "p",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "198:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 52,
            "name": "q",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "219:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "219:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "name": "libraryThing",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "241:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Thing_$38_storage",
              "typeString": "struct TestLibrary.Thing"
            },
            "typeName": {
              "contractScope": null,
              "id": 53,
              "name": "TestLibrary.Thing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38,
              "src": "241:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Thing_$38_storage_ptr",
                "typeString": "struct TestLibrary.Thing"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 56,
        "src": "119:155:2"
      }
    ],
    "src": "0:275:2"
  },
  "legacyAST": {
    "absolutePath": "/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestParent.sol",
    "exportedSymbols": {
      "TestParent": [
        55
      ]
    },
    "id": 56,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 201,
        "src": "25:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/martx/celo/celo-monorepo/packages/protocol/contracts/TestLibrary.sol",
        "file": "./TestLibrary.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 40,
        "src": "90:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 44,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 200,
              "src": "142:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$200",
                "typeString": "contract Ownable"
              }
            },
            "id": 45,
            "nodeType": "InheritanceSpecifier",
            "src": "142:7:2"
          }
        ],
        "contractDependencies": [
          82,
          200
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 55,
        "linearizedBaseContracts": [
          55,
          200,
          82
        ],
        "name": "TestParent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 48,
            "libraryName": {
              "contractScope": null,
              "id": 46,
              "name": "TestLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 39,
              "src": "160:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestLibrary_$39",
                "typeString": "library TestLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "154:40:2",
            "typeName": {
              "contractScope": null,
              "id": 47,
              "name": "TestLibrary.Thing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38,
              "src": "176:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Thing_$38_storage_ptr",
                "typeString": "struct TestLibrary.Thing"
              }
            }
          },
          {
            "constant": false,
            "id": 50,
            "name": "p",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "198:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 52,
            "name": "q",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "219:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "219:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "name": "libraryThing",
            "nodeType": "VariableDeclaration",
            "scope": 55,
            "src": "241:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Thing_$38_storage",
              "typeString": "struct TestLibrary.Thing"
            },
            "typeName": {
              "contractScope": null,
              "id": 53,
              "name": "TestLibrary.Thing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38,
              "src": "241:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Thing_$38_storage_ptr",
                "typeString": "struct TestLibrary.Thing"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 56,
        "src": "119:155:2"
      }
    ],
    "src": "0:275:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-06-30T20:44:43.974Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}