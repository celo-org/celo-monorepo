/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />

import * as TruffleContracts from ".";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(
        name: "AddressLinkedList"
      ): TruffleContracts.AddressLinkedListContract;
      require(
        name: "AddressSortedLinkedList"
      ): TruffleContracts.AddressSortedLinkedListContract;
      require(
        name: "AddressSortedLinkedListWithMedian"
      ): TruffleContracts.AddressSortedLinkedListWithMedianContract;
      require(name: "Context"): TruffleContracts.ContextContract;
      require(name: "Exchange"): TruffleContracts.ExchangeContract;
      require(name: "ExchangeBRL"): TruffleContracts.ExchangeBRLContract;
      require(
        name: "ExchangeBRLProxy"
      ): TruffleContracts.ExchangeBRLProxyContract;
      require(name: "ExchangeEUR"): TruffleContracts.ExchangeEURContract;
      require(
        name: "ExchangeEURProxy"
      ): TruffleContracts.ExchangeEURProxyContract;
      require(name: "ExchangeProxy"): TruffleContracts.ExchangeProxyContract;
      require(name: "Freezable"): TruffleContracts.FreezableContract;
      require(name: "Freezer"): TruffleContracts.FreezerContract;
      require(name: "GoldToken"): TruffleContracts.GoldTokenContract;
      require(name: "GrandaMento"): TruffleContracts.GrandaMentoContract;
      require(
        name: "GrandaMentoProxy"
      ): TruffleContracts.GrandaMentoProxyContract;
      require(name: "ICeloToken"): TruffleContracts.ICeloTokenContract;
      require(
        name: "ICeloVersionedContract"
      ): TruffleContracts.ICeloVersionedContractContract;
      require(name: "IERC20"): TruffleContracts.IERC20Contract;
      require(name: "IExchange"): TruffleContracts.IExchangeContract;
      require(name: "IFreezer"): TruffleContracts.IFreezerContract;
      require(name: "Initializable"): TruffleContracts.InitializableContract;
      require(name: "IRegistry"): TruffleContracts.IRegistryContract;
      require(name: "IReserve"): TruffleContracts.IReserveContract;
      require(name: "ISortedOracles"): TruffleContracts.ISortedOraclesContract;
      require(name: "IStableToken"): TruffleContracts.IStableTokenContract;
      require(name: "MultiSig"): TruffleContracts.MultiSigContract;
      require(name: "Ownable"): TruffleContracts.OwnableContract;
      require(name: "Proxy"): TruffleContracts.ProxyContract;
      require(
        name: "ReentrancyGuard"
      ): TruffleContracts.ReentrancyGuardContract;
      require(name: "Registry"): TruffleContracts.RegistryContract;
      require(name: "Reserve"): TruffleContracts.ReserveContract;
      require(name: "ReserveProxy"): TruffleContracts.ReserveProxyContract;
      require(
        name: "ReserveSpenderMultiSig"
      ): TruffleContracts.ReserveSpenderMultiSigContract;
      require(
        name: "ReserveSpenderMultiSigProxy"
      ): TruffleContracts.ReserveSpenderMultiSigProxyContract;
      require(name: "SortedOracles"): TruffleContracts.SortedOraclesContract;
      require(
        name: "SortedOraclesProxy"
      ): TruffleContracts.SortedOraclesProxyContract;
      require(name: "StableToken"): TruffleContracts.StableTokenContract;
      require(name: "StableTokenBRL"): TruffleContracts.StableTokenBRLContract;
      require(
        name: "StableTokenBRLProxy"
      ): TruffleContracts.StableTokenBRLProxyContract;
      require(name: "StableTokenEUR"): TruffleContracts.StableTokenEURContract;
      require(
        name: "StableTokenEURProxy"
      ): TruffleContracts.StableTokenEURProxyContract;
      require(
        name: "StableTokenProxy"
      ): TruffleContracts.StableTokenProxyContract;
      require(
        name: "StableTokenRegistry"
      ): TruffleContracts.StableTokenRegistryContract;
      require(
        name: "StableTokenRegistryProxy"
      ): TruffleContracts.StableTokenRegistryProxyContract;
      require(
        name: "UsingPrecompiles"
      ): TruffleContracts.UsingPrecompilesContract;
      require(name: "UsingRegistry"): TruffleContracts.UsingRegistryContract;
    }
  }
}
