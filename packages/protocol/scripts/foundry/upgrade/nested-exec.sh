#!/usr/bin/env bash
set -euo pipefail

# required envs
[ -z "${PK:-}" ] && echo "Need to set the PK via env" && exit 1;
[ -z "${SIGNER_1_PK:-}" ] && echo "Need to set the SIGNER_1_PK via env" && exit 1;
[ -z "${SIGNER_2_PK:-}" ] && echo "Need to set the SIGNER_2_PK via env" && exit 1;
[ -z "${SIGNER_3_PK:-}" ] && echo "Need to set the SIGNER_3_PK via env" && exit 1;
[ -z "${SIGNER_4_PK:-}" ] && echo "Need to set the SIGNER_4_PK via env" && exit 1;

# addresses
SENDER=0xe571b94CF7e95C46DFe6bEa529335f4A11d15D92
if [ $SENDER != $(cast wallet address --private-key $PK) ]; then
  echo "Invalid PK"; exit -1;
fi
MOCKED_SIGNER_1=0x899a864C6bE2c573a98d8493961F4D4c0F7Dd0CC
if [ $MOCKED_SIGNER_1 != $(cast wallet address --private-key $SIGNER_1_PK) ]; then
  echo "Invalid SIGNER_1_PK"; exit -1;
fi
MOCKED_SIGNER_2=0x865d05C8bB46E7AF16D6Dc99ddfb2e64BBec1345
if [ $MOCKED_SIGNER_2 != $(cast wallet address --private-key $SIGNER_2_PK) ]; then
  echo "Invalid SIGNER_2_PK"; exit -1;
fi
MOCKED_SIGNER_3=0x8Af6f11c501c082bD880B3ceC83e6bB249Fa32c9
if [ $MOCKED_SIGNER_3 != $(cast wallet address --private-key $SIGNER_3_PK) ]; then
  echo "Invalid SIGNER_3_PK"; exit -1;
fi
MOCKED_SIGNER_4=0x480C5f2340f9E7A46ee25BAa815105B415a7c2e2
if [ $MOCKED_SIGNER_4 != $(cast wallet address --private-key $SIGNER_4_PK) ]; then
  echo "Invalid SIGNER_4_PK"; exit -1;
fi

# rpc
RPC_URL=http://127.0.0.1:8545

# defaults
VALUE=0
OP_CALL=0
OP_DELEGATECALL=1
SAFE_TX_GAS=0
BASE_GAS=0
GAS_PRICE=0
GAS_TOKEN=0x0000000000000000000000000000000000000000
REFUND_RECEIVER=0x0000000000000000000000000000000000000000

# safes
PARENT_SAFE_ADDRESS=0x4092A77bAF58fef0309452cEaCb09221e556E112
CLABS_SAFE_ADDRESS=0x9Eb44Da23433b5cAA1c87e35594D15FcEb08D34d
COUNCIL_SAFE_ADDRESS=0xC03172263409584f7860C25B6eB4985f0f6F4636

# nonces
PARENT_SAFE_NONCE=22
CLABS_SAFE_NONCE=19
COUNCIL_SAFE_NONCE=21

echo "--- Parent prep ---"

# parent hash
OPCM_ADDRESS=0x597f110a3bee7f260b1657ab63c36d86b3740f36
OPCM_UPGRADE_CALLDATA=0xa458978000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000089e31965d844a309231b1f17759ccaf1b7c09861000000000000000000000000783a434532ee94667979213af1711505e8bfe37403b357b30095022ecbb44ef00d1de19df39cf69ee92a60683a6be2c6f8fe6a3e
PARENT_TX_HASH=$(cast call $PARENT_SAFE_ADDRESS \
  "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)(bytes32)" \
  $OPCM_ADDRESS $VALUE $OPCM_UPGRADE_CALLDATA $OP_DELEGATECALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $PARENT_SAFE_NONCE \
  -r $RPC_URL
)
echo "Parent hash: $PARENT_TX_HASH"

echo "--- cLabs part ---"

# cLabs approve
APPROVE_ON_PARENT_CALLDATA=$(cast calldata 'approveHash(bytes32)' $PARENT_TX_HASH)
CLABS_TX_HASH=$(cast call $CLABS_SAFE_ADDRESS \
  "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)(bytes32)" \
  $PARENT_SAFE_ADDRESS $VALUE $APPROVE_ON_PARENT_CALLDATA $OP_CALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $CLABS_SAFE_NONCE \
  -r $RPC_URL
)
echo "cLabs hash: $CLABS_TX_HASH"

# approve cLabs
echo "Approve cLabs hash"
CLABS_APPROVE_FROM_SIGNER_CALLDATA=$(cast calldata 'approveHash(bytes32)' $CLABS_TX_HASH)
cast send $CLABS_SAFE_ADDRESS $CLABS_APPROVE_FROM_SIGNER_CALLDATA --private-key $SIGNER_1_PK -r $RPC_URL
cast send $CLABS_SAFE_ADDRESS $CLABS_APPROVE_FROM_SIGNER_CALLDATA --private-key $SIGNER_2_PK -r $RPC_URL
echo "cLabs hash approved"

# exec cLabs
echo "Exec cLabs approval"
CLABS_SIG=0x000000000000000000000000${MOCKED_SIGNER_2:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000${MOCKED_SIGNER_1:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
echo "cLabs sig: $CLABS_SIG"
cast send $CLABS_SAFE_ADDRESS \
  "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)" \
  $PARENT_SAFE_ADDRESS $VALUE $APPROVE_ON_PARENT_CALLDATA $OP_CALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $CLABS_SIG \
  --private-key $PK \
  -r $RPC_URL
echo "cLabs approval executed"

echo "--- Council part ---"

# Council approve
COUNCIL_TX_HASH=$(cast call $COUNCIL_SAFE_ADDRESS \
  "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)(bytes32)" \
  $PARENT_SAFE_ADDRESS $VALUE $APPROVE_ON_PARENT_CALLDATA $OP_CALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $COUNCIL_SAFE_NONCE \
  -r $RPC_URL
)
echo "Council hash: $COUNCIL_TX_HASH"

# approve Council
echo "Approve Council hash"
COUNCIL_APPROVE_FROM_SIGNER_CALLDATA=$(cast calldata 'approveHash(bytes32)' $COUNCIL_TX_HASH)
cast send $COUNCIL_SAFE_ADDRESS $COUNCIL_APPROVE_FROM_SIGNER_CALLDATA --private-key $SIGNER_3_PK -r $RPC_URL
cast send $COUNCIL_SAFE_ADDRESS $COUNCIL_APPROVE_FROM_SIGNER_CALLDATA --private-key $SIGNER_4_PK -r $RPC_URL
echo "Council hash approved"

# exec Council
echo "Exec Council approval"
COUNCIL_SIG=0x000000000000000000000000${MOCKED_SIGNER_4:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000${MOCKED_SIGNER_3:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
echo "Council sig: $COUNCIL_SIG"
cast send $COUNCIL_SAFE_ADDRESS \
  "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)" \
  $PARENT_SAFE_ADDRESS $VALUE $APPROVE_ON_PARENT_CALLDATA $OP_CALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $COUNCIL_SIG \
  --private-key $PK \
  -r $RPC_URL
echo "cLabs approval executed"

echo "--- Parent exec ---"

# exec parent tx
echo "Exec OPCM upgrade"
PARENT_SIG=0x000000000000000000000000${CLABS_SAFE_ADDRESS:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000${COUNCIL_SAFE_ADDRESS:2}000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
echo "Parent sig: $PARENT_SIG"
cast send $PARENT_SAFE_ADDRESS \
  "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)" \
  $OPCM_ADDRESS $VALUE $OPCM_UPGRADE_CALLDATA $OP_DELEGATECALL $SAFE_TX_GAS $BASE_GAS $GAS_PRICE $GAS_TOKEN $REFUND_RECEIVER $PARENT_SIG \
  --gas-limit 16000000 \
  --private-key $PK \
  -r $RPC_URL
echo "OPCM upgrade executed"
