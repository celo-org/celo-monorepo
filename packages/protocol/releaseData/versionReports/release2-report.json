{
  "oldArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v1/contracts",
  "newArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v2/contracts",
  "exclude": "/.*Test|Mock.*|I[A-Z].*|.*Proxy|MultiSig.*|ReleaseGold|SlasherUtil|UsingPrecompiles/",
  "report": {
    "contracts": {
      "MetaTransactionWalletDeployer": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "MetaTransactionWalletDeployer",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "SortedOracles": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "SortedOracles",
              "signature": "setTokenReportExpiry(address,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "SortedOracles",
              "signature": "getTokenReportExpirySeconds(address)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "SortedOracles",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "Accounts": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Accounts",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Accounts",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Attestations": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Attestations",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Attestations",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Escrow": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Escrow",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Escrow",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Governance": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Governance",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "LockedGold": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "LockedGold",
              "type": "DeployedBytecode"
            },
            {
              "contract": "LockedGold",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "MetaTransactionWallet": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "MetaTransactionWallet",
              "signature": "getMetaTransactionDigest(address,uint256,bytes,uint256)",
              "oldValue": "public",
              "newValue": "external",
              "type": "MethodVisibility"
            },
            {
              "contract": "MetaTransactionWallet",
              "signature": "setSigner(address)",
              "oldValue": "public",
              "newValue": "external",
              "type": "MethodVisibility"
            },
            {
              "contract": "MetaTransactionWallet",
              "signature": "getVersionNumber()",
              "oldValue": "public",
              "newValue": "external",
              "type": "MethodVisibility"
            },
            {
              "contract": "MetaTransactionWallet",
              "type": "DeployedBytecode"
            },
            {
              "contract": "MetaTransactionWallet",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      }
    },
    "libraries": {
      "Signatures": {
        "storage": [],
        "major": [],
        "minor": [
          {
            "contract": "Signatures",
            "signature": "toEthSignedTypedDataHash(bytes32,bytes32)",
            "type": "MethodAdded"
          },
          {
            "contract": "Signatures",
            "signature": "getSignerOfTypedDataHash(bytes32,bytes32,uint8,bytes32,bytes32)",
            "type": "MethodAdded"
          }
        ],
        "patch": [
          {
            "contract": "Signatures",
            "type": "DeployedBytecode"
          }
        ]
      }
    }
  }
}
