{
  "oldArtifactsFolder": "/Users/martinvol/celo/celo-monorepo/packages/protocol/build/core-contracts.v3/contracts",
  "newArtifactsFolder": "/Users/martinvol/celo/celo-monorepo/packages/protocol/build/core-contracts.v8/contracts",
  "exclude": "/.*Test|Mock.*|I[A-Z].*|.*Proxy|MultiSig.*|ReleaseGold|SlasherUtil|UsingPrecompiles/",
  "report": {
    "contracts": {
      "Escrow": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "Escrow",
              "signature": "setRegistry(address)",
              "type": "MethodRemoved"
            },
            {
              "contract": "Escrow",
              "signature": "initialize(address)",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "Escrow",
              "signature": "transferWithTrustedIssuers(bytes32,address,uint256,uint256,address,uint256,address[])",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "getTrustedIssuersPerPayment(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "getDefaultTrustedIssuers()",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "MAX_TRUSTED_ISSUERS_PER_PAYMENT()",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "addDefaultTrustedIssuer(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "removeDefaultTrustedIssuer(address,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Escrow",
              "signature": "initialize()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Escrow",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Escrow",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "Exchange": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "Exchange",
              "signature": "initialize(address,address,uint256,uint256,uint256,uint256)",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "Exchange",
              "signature": "initialize(address,string,uint256,uint256,uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Exchange",
              "signature": "activateStable()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Exchange",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "ExchangeBRL": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "ExchangeBRL",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+2",
          "minor": "0",
          "patch": "0"
        }
      },
      "ExchangeEUR": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "ExchangeEUR",
              "signature": "initialize(address,address,uint256,uint256,uint256,uint256)",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "ExchangeEUR",
              "signature": "initialize(address,string,uint256,uint256,uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "ExchangeEUR",
              "signature": "activateStable()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "ExchangeEUR",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "FederatedAttestations": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "FederatedAttestations",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": [
            {
              "contract": "FederatedAttestations",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "GrandaMento": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "GrandaMento",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "0",
          "minor": "0",
          "patch": "+1"
        }
      },
      "OdisPayments": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "OdisPayments",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "StableTokenBRL": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "StableTokenBRL",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "+1"
        }
      },
      "UsingRegistryV2": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "UsingRegistryV2",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "Accounts": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Accounts",
              "signature": "setPaymentDelegation(address,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getPaymentDelegation(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "setEip712DomainSeparator()",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "addStorageRoot(bytes)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeStorageRoot(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getOffchainStorageRoots(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "deletePaymentDelegation()",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "setIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "authorizeSignerWithSignature(address,bytes32,uint8,bytes32,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "authorizeSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "completeSignerAuthorization(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isLegacySigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isDefaultSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isIndexedSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeDefaultSigner(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeIndexedSigner(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isLegacyRole(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getLegacySigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getDefaultSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasLegacySigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasDefaultSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasAuthorizedSigner(address,string)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getRoleAuthorizationSigner(address,address,bytes32,uint8,bytes32,bytes32)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Accounts",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Accounts",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "Election": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Election",
              "signature": "activateForAccount(address,address)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Election",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Election",
              "dependency": "AddressSortedLinkedList",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "+1"
        }
      },
      "Governance": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Governance",
              "signature": "revokeVotes()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Governance",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Governance",
              "dependency": "Proposals",
              "type": "LibraryLinkingChange"
            },
            {
              "contract": "Governance",
              "dependency": "IntegerSortedLinkedList",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "-1"
        }
      },
      "LockedGold": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "LockedGold",
              "signature": "getPendingWithdrawal(address,uint256)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "LockedGold",
              "type": "DeployedBytecode"
            },
            {
              "contract": "LockedGold",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "MetaTransactionWallet": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "MetaTransactionWallet",
              "signature": "setGuardian(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "MetaTransactionWallet",
              "signature": "recoverWallet(address)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "MetaTransactionWallet",
              "type": "DeployedBytecode"
            },
            {
              "contract": "MetaTransactionWallet",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "+1"
        }
      },
      "Attestations": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Attestations",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Attestations",
              "dependency": "Signatures",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "GoldToken": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "GoldToken",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "MetaTransactionWalletDeployer": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "MetaTransactionWalletDeployer",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Reserve": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Reserve",
              "signature": "getExchangeSpenders()",
              "oldValue": "public",
              "newValue": "external",
              "type": "MethodVisibility"
            },
            {
              "contract": "Reserve",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+2"
        }
      },
      "SortedOracles": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "SortedOracles",
              "type": "DeployedBytecode"
            },
            {
              "contract": "SortedOracles",
              "dependency": "AddressSortedLinkedListWithMedian",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "StableToken": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "StableToken",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "StableTokenEUR": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "StableTokenEUR",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Validators": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Validators",
              "type": "DeployedBytecode"
            },
            {
              "contract": "Validators",
              "dependency": "AddressLinkedList",
              "type": "LibraryLinkingChange"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+3"
        }
      }
    },
    "libraries": {
      "AddressLinkedList": {
        "storage": [],
        "major": [
          {
            "contract": "AddressLinkedList",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "AddressLinkedList",
            "type": "DeployedBytecode"
          }
        ]
      },
      "AddressSortedLinkedList": {
        "storage": [],
        "major": [
          {
            "contract": "AddressSortedLinkedList",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "AddressSortedLinkedList",
            "type": "DeployedBytecode"
          }
        ]
      },
      "AddressSortedLinkedListWithMedian": {
        "storage": [],
        "major": [
          {
            "contract": "AddressSortedLinkedListWithMedian",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "AddressSortedLinkedListWithMedian",
            "type": "DeployedBytecode"
          }
        ]
      },
      "IntegerSortedLinkedList": {
        "storage": [],
        "major": [
          {
            "contract": "IntegerSortedLinkedList",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "IntegerSortedLinkedList",
            "type": "DeployedBytecode"
          }
        ]
      },
      "Proposals": {
        "storage": [],
        "major": [
          {
            "contract": "Proposals",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "Proposals",
            "type": "DeployedBytecode"
          }
        ]
      },
      "Signatures": {
        "storage": [],
        "major": [
          {
            "contract": "Signatures",
            "signature": "getVersionNumber()",
            "type": "MethodRemoved"
          }
        ],
        "minor": [],
        "patch": [
          {
            "contract": "Signatures",
            "type": "DeployedBytecode"
          }
        ]
      }
    }
  }
}
