{
  "oldArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v2/contracts",
  "newArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v3/contracts",
  "exclude": "/.*Test|Mock.*|I[A-Z].*|.*Proxy|MultiSig.*|ReleaseGold|SlasherUtil|UsingPrecompiles/",
  "report": {
    "contracts": {
      "BlockchainParameters": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "BlockchainParameters",
              "signature": "initialize(uint256,uint256,uint256,uint256,uint256)",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "BlockchainParameters",
              "signature": "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getEpochSize()",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getEpochNumberOfBlock(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getEpochNumber()",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "validatorSignerAddressFromCurrentSet(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "validatorSignerAddressFromSet(uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "numberValidatorsInCurrentSet()",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "numberValidatorsInSet(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "checkProofOfPossession(address,bytes,bytes)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getBlockNumberFromHeader(bytes)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "hashHeader(bytes)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getParentSealBitmap(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getVerifiedSealBitmapFromHeader(bytes)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "minQuorumSize(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "minQuorumSizeInCurrentSet()",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "initialize(uint256,uint256,uint256,uint256,uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getVersionNumber()",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "setUptimeLookbackWindow(uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "BlockchainParameters",
              "signature": "getUptimeLookbackWindow()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "BlockchainParameters",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "ExchangeEUR": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "ExchangeEUR",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "StableToken": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "StableToken",
              "signature": "initialize(string,string,uint8,address,uint256,uint256,address[],uint256[])",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "StableToken",
              "signature": "initialize(string,string,uint8,address,uint256,uint256,address[],uint256[],string)",
              "type": "MethodAdded"
            },
            {
              "contract": "StableToken",
              "signature": "getExchangeRegistryId()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "StableToken",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "StableTokenEUR": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "StableTokenEUR",
              "type": "NewContract"
            }
          ],
          "minor": [],
          "patch": []
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "Validators": {
        "changes": {
          "storage": [],
          "major": [
            {
              "contract": "Validators",
              "signature": "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
              "type": "MethodRemoved"
            }
          ],
          "minor": [
            {
              "contract": "Validators",
              "signature": "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Validators",
              "signature": "setDowntimeGracePeriod(uint256)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Validators",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "+1",
          "minor": "0",
          "patch": "0"
        }
      },
      "Reserve": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Reserve",
              "signature": "addExchangeSpender(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "Reserve",
              "signature": "removeExchangeSpender(address,uint256)",
              "type": "MethodAdded"
            },
            {
              "contract": "Reserve",
              "signature": "getExchangeSpenders()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Reserve",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "Governance": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Governance",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      }
    },
    "libraries": {}
  }
}
