{
  "oldArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v3/contracts",
  "newArtifactsFolder": "/home/circleci/app/packages/protocol/build/core-contracts.v4/contracts",
  "exclude": "/.*Test|Mock.*|I[A-Z].*|.*Proxy|MultiSig.*|ReleaseGold|SlasherUtil|UsingPrecompiles/",
  "report": {
    "contracts": {
      "Accounts": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Accounts",
              "signature": "setEip712DomainSeparator()",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "setIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "authorizeSignerWithSignature(address,bytes32,uint8,bytes32,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "authorizeSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "completeSignerAuthorization(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isLegacySigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isDefaultSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isIndexedSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isSigner(address,address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeDefaultSigner(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeIndexedSigner(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "removeSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "isLegacyRole(bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getLegacySigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getDefaultSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasLegacySigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasDefaultSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasIndexedSigner(address,bytes32)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "hasAuthorizedSigner(address,string)",
              "type": "MethodAdded"
            },
            {
              "contract": "Accounts",
              "signature": "getRoleAuthorizationSigner(address,address,bytes32,uint8,bytes32,bytes32)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Accounts",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "Election": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Election",
              "signature": "activateForAccount(address,address)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Election",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "Governance": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "Governance",
              "signature": "revokeVotes()",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "Governance",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "MetaTransactionWallet": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [
            {
              "contract": "MetaTransactionWallet",
              "signature": "setGuardian(address)",
              "type": "MethodAdded"
            },
            {
              "contract": "MetaTransactionWallet",
              "signature": "recoverWallet(address)",
              "type": "MethodAdded"
            }
          ],
          "patch": [
            {
              "contract": "MetaTransactionWallet",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "+1",
          "patch": "0"
        }
      },
      "GoldToken": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "GoldToken",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "MetaTransactionWalletDeployer": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "MetaTransactionWalletDeployer",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      },
      "Reserve": {
        "changes": {
          "storage": [],
          "major": [],
          "minor": [],
          "patch": [
            {
              "contract": "Reserve",
              "signature": "getExchangeSpenders()",
              "oldValue": "public",
              "newValue": "external",
              "type": "MethodVisibility"
            },
            {
              "contract": "Reserve",
              "type": "DeployedBytecode"
            }
          ]
        },
        "versionDelta": {
          "storage": "=",
          "major": "=",
          "minor": "=",
          "patch": "+1"
        }
      }
    },
    "libraries": {}
  }
}
