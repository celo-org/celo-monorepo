// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Message Banner when message and title passed in renders title with message 1`] = `
<View
  style={
    Object {
      "overflow": "hidden",
    }
  }
  testID="infoBanner"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#3C9BF4",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingHorizontal": 25,
        "paddingTop": 10,
        "transform": Array [
          Object {
            "translateY": -500,
          },
        ],
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#2E3338",
            "fontFamily": "Hind-Regular",
            "fontSize": 14,
            "lineHeight": 18,
          },
          Object {
            "color": "white",
            "lineHeight": undefined,
            "textAlign": "center",
          },
          false,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "lineHeight": undefined,
              "textAlign": "center",
            },
            Object {
              "fontFamily": "Hind-SemiBold",
            },
          ]
        }
      >
         
        Declaration
         
      </Text>
      I am the concensus
    </Text>
  </View>
</View>
`;

exports[`Message Banner when message passed in renders message 1`] = `
<View
  style={
    Object {
      "overflow": "hidden",
    }
  }
  testID="infoBanner"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#3C9BF4",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingHorizontal": 25,
        "paddingTop": 10,
        "transform": Array [
          Object {
            "translateY": -500,
          },
        ],
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#2E3338",
            "fontFamily": "Hind-Regular",
            "fontSize": 14,
            "lineHeight": 18,
          },
          Object {
            "color": "white",
            "lineHeight": undefined,
            "textAlign": "center",
          },
          false,
        ]
      }
    >
      This is your shadow speaking
    </Text>
  </View>
</View>
`;
