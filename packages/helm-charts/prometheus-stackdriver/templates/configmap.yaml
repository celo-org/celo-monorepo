#Copyright 2019 Google LLC

#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at

#https://www.apache.org/licenses/LICENSE-2.0

#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
{{ include "prometheus-stackdriver.labels" .  | indent 4 }}
  namespace: {{ .Values.namespace }}
data:
  prometheus.yml: |-
    global:
      scrape_interval: 60s
      evaluation_interval: 5s
      # Label the metrics with a custom label if using multiple prometheus for same environments
      external_labels:
        cluster_name: {{ .Values.cluster }}

    {{- with .Values.remote_write }}
    remote_write:
{{ toYaml . | indent 6 }}
    {{- end }}

    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 20s
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
{{- range .Values.gcloud.gceScrapeZones }}
      - job_name: 'gce-instances-{{ . }}'

        gce_sd_configs:
        - project: {{ $.Values.gcloud.project }}
          zone: {{ . }}
          filter: '(status="RUNNING") AND (labels.prometheus_cluster="{{ $.Values.cluster }}")'
          refresh_interval: 60s
          port: 6060

        relabel_configs:
          - source_labels: [__meta_gce_zone]
            target_label: cloud_zone
          - source_labels: [__meta_gce_network]
            target_label: cloud_network
          - source_labels: [__meta_gce_instance_name]
            target_label: node_name
          - source_labels: [__meta_gce_private_ip, __meta_gce_metadata_prometheus_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_gce_metadata_prometheus_path]
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [__name__]
            regex: .*
            replacement: '{{ $.Values.cluster }}'
            target_label: cluster_name
{{- end -}}
{{- if .Values.scrapeJob }}
  {{- if .Values.scrapeJob.Name }}
      - job_name: {{ .Values.scrapeJob.Name }}
  {{- end }}
        static_configs:
  {{- if .Values.scrapeJob.Targets }}
          - targets:
    {{- range .Values.scrapeJob.Targets }}
            - {{ . }}
    {{- end -}}
  {{- end -}}
  {{ if .Values.scrapeJob.Labels }}
            labels:
    {{- range .Values.scrapeJob.Labels }}
              {{ . }}
    {{- end -}}
  {{- end -}}
{{- end -}}