apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: attestation-service
    chart: attestation-service
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: attestation-service
spec:
  serviceName: attestation-service
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.geth.validators }}
  selector:
    matchLabels:
      app: attestation-service
      release: {{ .Release.Name }}
      component: attestation-service
  template:
    metadata:
      labels:
        app: attestation-service
        release: {{ .Release.Name }}
        component: attestation-service
    spec:
      initContainers:
      - name: init-genesis
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.celo
        - name: config
          mountPath: /var/geth
      - name: get-account
        image: {{ .Values.celotool.image.repository }}:{{ .Values.celotool.image.tag }}
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - "-c"
          - |
            echo $REPLICA_NAME
            [[ $REPLICA_NAME =~ -([0-9]+)$ ]] || exit 1
            RID=${BASH_REMATCH[1]}
            echo -n $RID >/root/.celo/replica_id
            echo "Generating keys for rid=$RID"
            celotooljs.sh generate bip32 --mnemonic "$MNEMONIC" --accountType validator --index $RID > /root/.celo/pkey
            celotooljs.sh generate bip32 --mnemonic "$MNEMONIC" --accountType attestation --index $RID > /root/.celo/attestationSignerKey
            celotooljs.sh generate account-address --private-key `cat /root/.celo/pkey` > /root/.celo/address
            celotooljs.sh generate account-address --private-key `cat /root/.celo/attestationSignerKey` > /root/.celo/attestationSignerAddress
            echo password > /root/.celo/password
            cp /var/geth/static-nodes.json /root/.celo/static-nodes.json
        env:
        - name: MNEMONIC
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: MNEMONIC
        - name: REPLICA_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: data
          mountPath: /root/.celo
        - name: config
          mountPath: /var/geth
      - name: import-geth-account
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          geth account import --password /root/.celo/password /root/.celo/attestationSignerKey || true
        volumeMounts:
        - name: data
          mountPath: /root/.celo
      containers:
      - name: light-client
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
          set -euo pipefail
          ATTESTATION_SIGNER_ADDRESS=`cat /root/.celo/attestationSignerAddress`
          geth \
            --password=/root/.celo/password \
            --unlock=${ATTESTATION_SIGNER_ADDRESS} \
            --ws \
            --wsaddr 0.0.0.0 \
            --wsorigins=* \
            --wsapi=eth,net,web3,debug \
            --networkid=${NETWORK_ID} \
            --syncmode=ultralight \
            --consoleformat=json \
            --consoleoutput=stdout \
            --verbosity={{ .Values.geth.verbosity }} \
            --metrics
        env:
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: attestation-service-geth-config
              key: networkid
        ports:
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        - name: ws
          containerPort: 8546
        volumeMounts:
        - name: data
          mountPath: /root/.celo
      - name: attestation-service
        image: {{ .Values.attestation_service.image.repository }}:{{ .Values.attestation_service.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          yarn db:migrate
          sleep 5
          ATTESTATION_SIGNER_ADDRESS=`cat /root/.celo/attestationSignerAddress` CELO_VALIDATOR_ADDRESS=`cat /root/.celo/address` yarn start
        ports:
        - name: http
          containerPort: 3000
        resources:
          requests:
            cpu: 50m
            memory: 150Mi
        env:
        - name: DATABASE_URL
          value: postgres://postgres:password@{{ .Release.Namespace }}-attestation-service-postgresql:5432/AttestationService
        - name: NODE_ENV
          value: production
        - name: CELO_PROVIDER
          value: ws://localhost:8546
        - name: APP_SIGNATURE
          value: {{ .Values.attestation_service.sms_retriever_hash_code }}
        - name: SMS_PROVIDERS
          value: nexmo
        - name: LOG_FORMAT
          value: stackdriver
        - name: NEXMO_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: NEXMO_KEY
        - name: NEXMO_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: NEXMO_SECRET
        volumeMounts:
        - name: data
          mountPath: /root/.celo

      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: attestation-service-geth-config
          {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
