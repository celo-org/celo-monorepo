apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  labels:
    {{- include "celo.blockscout.labels" . | nindent 4 }}
    component: blockscout-web
  annotations:
    {{- include "celo.blockscout.annotations" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.blockscout.web.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.blockscout.web.strategy.rollingUpdate.maxUnavailable }}
  replicas: 1
  selector:
    matchLabels:
      app: blockscout
      release: {{ .Release.Name }}
      component: blockscout-web
  template:
    metadata:
      {{- if .Values.blockscout.metrics.enabled}}
      annotations:
        prometheus.io/path: /metrics/web
        prometheus.io/port: "4000"
        prometheus.io/scrape: "true"
      {{- end}}
      labels:
        app: blockscout
        release: {{ .Release.Name }}
        component: blockscout-web
    spec:
      serviceAccountName: {{ .Release.Name }}-rbac
      initContainers:
      - name: "blockscout-init"
        image: "groundnuty/k8s-wait-for:1.3"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - job
        - {{ .Release.Name }}-migration
      containers:
      - name: blockscout-web
        image: {{ .Values.blockscout.image.repository }}:{{ .Values.blockscout.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - /bin/sh
        - -c
        args:
        - |
           exec mix cmd --app block_scout_web "iex --name {{ .Values.blockscout.web.erlangNodeName}}@0.0.0.0 -e 'IEx.configure(default_prompt: \"\", alive_prompt: \"\")' -S mix do deps.loadpaths --no-deps-check, phx.server --no-compile"
        ports:
        - name: http
          containerPort: {{ .Values.blockscout.web.port }}
        {{- if .Values.blockscout.web.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: http
          initialDelaySeconds: {{ .Values.blockscout.web.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.blockscout.web.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.blockscout.web.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.blockscout.web.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.blockscout.web.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.blockscout.web.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: http
          initialDelaySeconds: {{ .Values.blockscout.web.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.blockscout.web.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.blockscout.web.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.blockscout.web.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.blockscout.web.livenessProbe.failureThreshold }}
        {{- end }}
        resources:
          requests:
            memory: {{ .Values.blockscout.web.resources.requests.memory }}
            cpu: {{ .Values.blockscout.web.resources.requests.cpu }}
        env:
        - name: PORT
          value: {{ .Values.blockscout.web.port | quote }}
        - name: DISABLE_INDEXER
          value: "true"
        - name: POOL_SIZE
          value: {{ .Values.blockscout.web.pool_size | quote }}
        - name: BLOCKSCOUT_HOST
          value: {{ .Values.blockscout.web.host | quote }}
        - name: ENABLE_SOURCIFY_INTEGRATION
          value: {{ .Values.blockscout.web.sourcify.enabled | quote }}
        - name: SOURCIFY_SERVER_URL
          value: {{ .Values.blockscout.web.sourcify.serverUrl | quote }}
        - name: SOURCIFY_REPO_URL
          value: {{ .Values.blockscout.web.sourcify.repoUrl | quote }}
        - name: CHAIN_ID
          value: {{ .Values.blockscout.networkID | quote }}
        - name: APPS_MENU
          value: {{ .Values.blockscout.web.appsMenu.enabled | quote }}
        - name: DISABLE_STATS
          value: {{ not .Values.blockscout.web.stats.enabled | quote }}
        - name: STATS_REPORT_URL
          value: {{ .Values.blockscout.web.stats.reportUrl | quote }}
        - name: SWAP_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.swapList | quote }}
        - name: DEFI_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.defiList | quote }}
        - name: WALLET_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.walletList | quote }}
        - name: NFT_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.nftList | quote }}
        - name: CONNECT_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.connectList | quote }}
        - name: SPEND_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.spendList | quote }}
        - name: FINANCE_TOOLS_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.financeToolsList | quote }}
        - name: RESOURCES_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.resourcesList | quote }}
        - name: LEARNING_MENU_LIST
          value: {{ .Values.blockscout.web.appsMenu.learningList | quote }}
        - name: RE_CAPTCHA_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name:  {{ .Values.blockscout.web.recaptchaSecretName | quote }}
              key: project_id
        - name: RE_CAPTCHA_SITE_KEY
          valueFrom:
            secretKeyRef:
              name:  {{ .Values.blockscout.web.recaptchaSecretName | quote }}
              key: site_key
        - name: RE_CAPTCHA_API_KEY
          valueFrom:
            secretKeyRef:
              name:  {{ .Values.blockscout.web.recaptchaSecretName | quote }}
              key: api_key
{{ include "celo.blockscout-env-vars" . | indent 8 }}
{{- $data := dict "Values" .Values "Database" .Values.blockscout.web.db }}
{{ include "celo.blockscout-db-sidecar" $data | indent 6 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
