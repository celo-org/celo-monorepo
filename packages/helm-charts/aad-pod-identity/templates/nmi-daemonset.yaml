apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: nmi
    tier: node
    k8s-app: aad-pod-id
  name: nmi
  namespace: {{ .Values.namespace }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: nmi
      tier: node
  template:
    metadata:
      labels:
        component: nmi
        tier: node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.nmi.prometheusPort }}"
    spec:
      serviceAccountName: aad-pod-id-nmi-service-account
      hostNetwork: true
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: iptableslock
      containers:
      - name: nmi
        image: {{ .Values.nmi.image.repo }}:{{ .Values.nmi.image.tag }}
        imagePullPolicy: Always
        args:
          {{- if semverCompare "<= 1.6.1-0" .Values.nmi.image.tag }}
          - "--host-ip=$(HOST_IP)"
          {{- end }}
          - "--node=$(NODE_NAME)"
          - "--prometheus-port={{ .Values.nmi.prometheusPort }}"
          {{- if .Values.nmi.probePort }}
          - --http-probe-port={{ .Values.nmi.probePort }}
          {{- end }}        
        env:
          {{- if semverCompare "<= 1.6.1-0" .Values.nmi.image.tag }}
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          {{- end }}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FORCENAMESPACED
            value: "{{ .Values.nmi.forceNamespaced }}"
        ports:
        - name: prometheus
          containerPort: {{ .Values.nmi.prometheusPort }}
        resources:
{{ toYaml .Values.nmi.resources | indent 10 }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: iptableslock
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      nodeSelector:
        beta.kubernetes.io/os: linux
