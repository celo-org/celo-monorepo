name: Protocol Foundry tests
on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:
    branches:
      - master
      - 'release/**'

env:
  # Increment these to force cache rebuilding
  FOUNDRY_CACHE_KEY: 2
  # Supported Foundry version defined at celo-org (GitHub organisation) level, for consistency across workflows. Please contact DevOps to update value.
  SUPPORTED_FOUNDRY_VERSION: ${{ vars.SUPPORTED_FOUNDRY_VERSION }}
  # Celo Foundry (celo-org/foundry) binaries version used for devchain anvil generation
  CELO_FOUNDRY_VERSION: "celo-0.1.0"

permissions:
  contents: read

jobs:
  check:
    defaults:
      run:
        working-directory: packages/protocol
    name: Run tests
    # runs-on: ubuntu-latest
    runs-on: ['self-hosted', 'org', 'ubuntu22-node18']
    # container:
    #   image: us-west1-docker.pkg.dev/devopsre/actions-runner-controller/celo-monorepo22-18:ubuntu22-node18
    #   options: --user runner
    steps:
      # - name: Set Swap Space
      #   uses: pierotofy/set-swap-space@0404882bc4666c0ff2f6fd8b3d32af69a730183c
      #   with:
      #     swap-size-gb: 32
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48
      #   with:
      #     detached: true
      #     limit-access-to-actor: true
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fail if there are test with wrong extension
        if: success() || failure()
        run: |
          if  tree test-sol | grep -i ".sol" | grep -v ".sol"; then
            echo "There are tests with wrong extensions"
            tree test-sol | grep -i ".sol" | grep -v ".sol"
            exit 1
          fi
      - name: Foundry cache
        id: foundry-cache
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-foundry-cache-${{ env.FOUNDRY_CACHE_KEY }}
      - name: Foundry out
        id: foundry-out
        uses: actions/cache@v4
        with:
          path: ./out
          key: ${{ runner.os }}-foundry-out-${{ env.FOUNDRY_CACHE_KEY }}

      - name: Install Celo Foundry binaries
        run: |
          curl -L -o foundry.tar.gz https://github.com/celo-org/foundry/releases/download/${{ env.CELO_FOUNDRY_VERSION }}/foundry_${{ env.CELO_FOUNDRY_VERSION }}_linux_amd64.tar.gz
          mkdir -p celo-foundry
          tar -xzf foundry.tar.gz -C celo-foundry
          echo "$(pwd)/celo-foundry" >> $GITHUB_PATH

      - name: Install forge dependencies
        run: forge install
        #           git config --global --add safe.directory /__w/celo-monorepo/celo-monorepo

      # "Run tests" already tries to compile the contracts
      # Making it explicit here to have easier to read errors
      - name: Compile Contracts
        run: forge --version && forge compile

      - name: Run unit tests common
        # can't use gas limit because some setUp function use more than the limit
        run: |
          forge test -vvv \
          --match-path "test-sol/unit/common/*"

      - name: Run unit tests governance/network
        if: success() || failure()
        run: |
          forge test -vvv \
          --match-path "test-sol/unit/governance/network/*" \
          --block-gas-limit 50000000

      - name: Run unit tests governance/validators
        if: success() || failure()
        run: | 
          forge test -vvv \
          --match-path "test-sol/unit/governance/validators/*" \
          --block-gas-limit 50000000

      - name: Run unit tests governance/voting
        # can't use gas limit because some setUp function use more than the limit
        if: success() || failure()
        run: | 
          forge test -vvv \
          --match-path "test-sol/unit/governance/voting/*"

      - name: Run unit tests stability
        if: success() || failure()
        run: |
          forge test -vvv \
          --match-path "test-sol/unit/stability/*" \
          --block-gas-limit 50000000

      - name: Run unit tests identity
        if: success() || failure()
        run: |
          forge test -vvv \
          --match-path "test-sol/unit/identity/*" \
          --block-gas-limit 50000000

      - name: Fail if there are tests without folder
        if: success() || failure()
        run: |
          if ls test-sol | grep -qi '\.t\.sol'; then
            echo "All tests should be in a folder"
            exit 1
          fi

      - name: Run all unit tests in case some were missed (excl. integration and e2e tests)
        # can't use gas limit because some setUp function use more than the limit
        # Excludes e2e and integration tests, because they require a connection to an anvil devchain
        # serving at localhost.
        run: |
          forge test -vvv \
          --match-path "test-sol/unit/*"
      
      - name: Run integration tests (that don't require an anvil devchain)
        if: success() || failure()
        run: |
          forge test -vvv \
          --match-path "test-sol/integration/*"

      - name: Checkout Optimism repo
        uses: actions/checkout@v4
        if: success() || failure()
        with:
          repository: 'celo-org/optimism'
          ref: 'mc01/completeMigrations'
          path: celo-optimism
          submodules: recursive
          fetch-depth: 0

      - name: Generate initial state for devchain
        if: success() || failure()
        run: |
          cd $GITHUB_WORKSPACE/celo-optimism/packages/contracts-bedrock

          anvil --celo --port 9545 --code-size-limit 245760 &
          while ! nc -z localhost 9545; do
            sleep 0.5
          done

          DEPLOY_CONFIG_PATH=deploy-config/celo-devnet.json forge script \
            --rpc-url http://localhost:9545 \
            --broadcast \
            --private-key ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 \
            --sig "runCeloDevnet()" \
            scripts/L2Genesis.s.sol:L2Genesis
          lsof -i :9545 | awk 'NR!=1 {print $2}' | xargs kill -9

          python3 convert_to_anvil_state.py state-dump-11142220-granite.json anvil-state.json

      - name: Set up anvil devchain from generated state
        if: success() || failure()
        run: |
          cd $GITHUB_WORKSPACE/celo-optimism/packages/contracts-bedrock
          anvil --celo --port 9545 --code-size-limit 245760 --load-state anvil-state.json &
          while ! nc -z localhost 9545; do
            sleep 0.5
          done
            
      - name: Generate migrations on local devchain
        if: success() || failure()
        run: ./scripts/foundry/create_and_migrate_anvil_devchain.sh
      
      - name: Run migration tests against local op-geth devchain
        run: |
          source ./scripts/foundry/constants.sh

          FOUNDRY_PROFILE=devchain forge test -vvv \
          --match-path "test-sol/devchain/migration/*" \
          --fork-url $ANVIL_RPC_URL
      
      - name: Run e2e tests against local devchain
        run: |
          source ./scripts/foundry/constants.sh

          FOUNDRY_PROFILE=devchain forge test -vvv \
          --match-path "test-sol/devchain/e2e/*" \
          --fork-url $ANVIL_RPC_URL
