name: Protocol Devchain Anvil
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # Increment these to force cache rebuilding
  FOUNDRY_CACHE_KEY: 1

jobs:
  check:
    defaults:
      run:
        working-directory: packages/protocol
    name: Run tests
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fail if there are test with wrong extension
        run: |
          if  tree test-sol | grep -i ".sol" | grep -v ".sol"; then
            echo "There are tests with wrong extensions"
            tree test-sol | grep -i ".sol" | grep -v ".sol"
            exit 1
          fi
      - name: Foundry cache
        id: foundry-cache
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-foundry-cache-${{ env.FOUNDRY_CACHE_KEY }}
      - name: Foundry out
        id: foundry-out
        uses: actions/cache@v3
        with:
          path: ./out
          key: ${{ runner.os }}-foundry-out-${{ env.FOUNDRY_CACHE_KEY }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install forge dependencies
        run: forge install

      # "Run tests" already tries to compile the contracts
      # Making it explicit here to have easier to read errors
      - name: Compile Contracts
        run: forge --version && forge compile

      - uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];

      - name: Generate migrations
        if: success() || failure()
        run: ./migrations_sol/create_and_migrate_anvil_devchain.sh
      
      - name: Upload devchain as artifact
        uses: actions/upload-artifact@v4
        with:
          name: devchain-${{ fromJson(steps.get_pr_data.outputs.result).number }}
          path: packages/protocol/.tmp
          # Max retention time is 90 days for public repos
          # https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#artifact-and-log-retention-policy
          retention-days: 90
