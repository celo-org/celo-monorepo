name: env-tests

# Run this workflow manually
on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to run env-tests against'
        required: true

jobs:
  core_contracts_release:
    runs-on: ubuntu-latest
    environment: env-tests-environment
    steps:
      - name: Setup lightest node
        run: |
          export CELO_IMAGE=us.gcr.io/celo-org/geth:baklava
          docker pull $CELO_IMAGE
          mkdir celo-data-dir
          cd celo-data-dir
          docker run --name celo-fullnode -d --restart unless-stopped --stop-timeout 300 -p 127.0.0.1:8545:8545 -p 127.0.0.1:8546:8546 -p 30303:30303 -p 30303:30303/udp -v $PWD:/root/.celo $CELO_IMAGE --verbosity 3 --syncmode lightest --rpc --rpcaddr 0.0.0.0 --rpcapi eth,net,web3,debug,admin,personal --light.serve 90 --light.maxpeers 1000 --maxpeers 1100 --nousb --baklava --datadir /root/.celo

      - name: Checking if node is synced
        run: |
          while true; do output=$(docker exec -i celo-fullnode geth attach --exec "eth.syncing" | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g"); sleep 1; if [ '$output' == 'false' ]; then break; fi; done

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Setup yarn
        run: |
          npm install --global yarn
          yarn
          yarn lerna bootstrap
    
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build packages
        run: yarn lerna run build --ignore docs

      - name: Decrypt mnenomic
        run: yarn keys:decrypt

      - name: Run the env tests
        run: cd packages/env-tests/; yarn ${{ github.event.inputs.network }}-test
        shell: bash
